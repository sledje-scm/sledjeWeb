{"ast":null,"code":"var _jsxFileName = \"/home/someone_practicing/prac/sledjeWeb/frontend/src/pages/CreateOrder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { X, Mic, MicOff } from \"lucide-react\";\nimport { wordsToNumbers } from 'words-to-numbers';\n\n// Sample product database for order parsing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst productDatabase = [{\n  item: \"Product A\",\n  brand: \"Brand X\",\n  rate: 100\n}, {\n  item: \"Product B\",\n  brand: \"Brand Y\",\n  rate: 150\n}, {\n  item: \"Product C\",\n  brand: \"Brand Z\",\n  rate: 80\n}, {\n  item: \"Product D\",\n  brand: \"Brand X\",\n  rate: 90\n}, {\n  item: \"Product E\",\n  brand: \"Brand X\",\n  rate: 120\n}, {\n  item: \"Product F\",\n  brand: \"Brand Y\",\n  rate: 70\n}, {\n  item: \"Product G\",\n  brand: \"Brand Z\",\n  rate: 60\n}, {\n  item: \"Product H\",\n  brand: \"Brand X\",\n  rate: 200\n}];\nconst knownUnits = ['kg', 'kilogram', 'g', 'gram', 'liters', 'liter', 'bottles', 'packets', 'pieces', 'dozen', 'box', 'boxes', 'l', 'ml', 'milliliter', 'cups', 'pints', 'quarts', 'ounces'];\nfunction detectUnit(itemStr) {\n  if (typeof itemStr !== 'string') {\n    console.warn('Expected string but got:', typeof itemStr, itemStr);\n    return {\n      unit: 'unit',\n      item: 'unknown'\n    };\n  }\n  const words = itemStr.trim().toLowerCase().split(/\\s+/);\n\n  // Check if first word is a unit\n  if (knownUnits.includes(words[0])) {\n    return {\n      unit: words[0],\n      item: words.slice(1).join(' ') || 'unknown'\n    };\n  }\n\n  // Check unit at the end (e.g., \"water bottles\")\n  const last = words[words.length - 1];\n  if (knownUnits.includes(last)) {\n    return {\n      unit: last,\n      item: words.slice(0, -1).join(' ') || 'unknown'\n    };\n  }\n  return {\n    unit: 'unit',\n    item: itemStr.trim()\n  };\n}\nfunction parseMultipleOrders(transcript) {\n  if (typeof transcript !== 'string') {\n    console.error('Invalid input: transcript must be a string');\n    return [];\n  }\n  let normalized;\n  try {\n    transcript = transcript.replace(/[^a-zA-Z0-9\\s.,]/g, ''); // Remove unwanted characters\n    transcript = transcript.replace(/\\s+/g, ' ').trim(); // Normalize spaces\n    transcript = transcript.replace(/\\bto\\b/g, \"two\"); // Replace \"to\" with \"two\"\n    normalized = wordsToNumbers(transcript); // Convert word numbers to digits\n  } catch (error) {\n    console.error('Error converting words to numbers:', error);\n    normalized = transcript; // Fall back to original transcript if conversion fails\n  }\n  console.log(\"Normalized transcript:\", normalized);\n  const orders = [];\n  // Number followed by a word or words that don't contain numbers\n  const regex = /(\\d+(?:\\.\\d+)?)\\s+([a-zA-Z][a-zA-Z\\s]*?)(?=\\s+\\d+|$)/g;\n  let match;\n  while ((match = regex.exec(normalized)) !== null) {\n    const [, quantity, itemText] = match;\n    const {\n      unit,\n      item\n    } = detectUnit(itemText.trim());\n    orders.push({\n      item,\n      quantity: parseFloat(quantity),\n      unit\n    });\n    console.log(`Parsed: ${quantity} Ã— ${itemText.trim()} (${unit})`);\n  }\n  return orders;\n}\nconst CreateOrder = ({\n  isOpen,\n  onClose,\n  onAddOrder\n}) => {\n  _s();\n  const [newOrder, setNewOrder] = useState({\n    customerName: '',\n    orderId: '',\n    items: []\n  });\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [parsedItems, setParsedItems] = useState([]);\n  const recognitionRef = useRef(null);\n\n  // Generate a unique order ID\n  const generateOrderId = () => {\n    const timestamp = new Date().getTime();\n    const randomNum = Math.floor(Math.random() * 1000);\n    return `ORD${timestamp.toString().slice(-4)}${randomNum}`;\n  };\n  const createSpeechRecognition = () => {\n    if (typeof window === 'undefined') return null;\n\n    // Check for different speech recognition APIs\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition || window.mozSpeechRecognition || window.msSpeechRecognition;\n    if (!SpeechRecognition) {\n      console.warn('Speech recognition not supported');\n      return null;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.continuous = false; // Changed to false for better mobile support\n    recognition.interimResults = false; // Changed to false for better mobile support\n    recognition.maxAlternatives = 1;\n    recognition.lang = 'en-US'; // Set language explicitly\n\n    return recognition;\n  };\n  // Initialize recognition\n  useEffect(() => {\n    try {\n      if (!recognitionRef.current) {\n        recognitionRef.current = createSpeechRecognition();\n      }\n      if (recognitionRef.current) {\n        recognitionRef.current.onresult = event => {\n          const last = event.results.length - 1;\n          const transcript = event.results[last][0].transcript;\n          setTranscript(prev => prev + ' ' + transcript);\n        };\n        recognitionRef.current.onerror = event => {\n          console.error('Speech recognition error:', event);\n          setIsListening(false);\n          if (event.error === 'not-allowed') {\n            alert('Please allow microphone access to use voice input.');\n          } else if (event.error === 'no-speech') {\n            alert('No speech was detected. Please try again.');\n          }\n        };\n        recognitionRef.current.onend = () => {\n          setIsListening(false);\n          // Automatically restart listening on mobile\n          if (isListening) {\n            try {\n              recognitionRef.current.start();\n            } catch (e) {\n              console.error('Error restarting recognition:', e);\n            }\n          }\n        };\n      }\n    } catch (error) {\n      console.error('Error initializing speech recognition:', error);\n    }\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n    };\n  }, [isOpen, isListening]);\n  const startListening = async () => {\n    try {\n      if (!recognitionRef.current) {\n        alert('Speech recognition is not supported in this browser. Please try using Chrome.');\n        return;\n      }\n\n      // For iOS Safari, we need to request permission differently\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        try {\n          await navigator.mediaDevices.getUserMedia({\n            audio: true\n          });\n        } catch (err) {\n          console.error('Microphone permission denied:', err);\n          alert('Please allow microphone access to use voice input.');\n          return;\n        }\n      }\n      setTranscript('');\n      await recognitionRef.current.start();\n      setIsListening(true);\n    } catch (error) {\n      console.error('Error starting speech recognition:', error);\n      if (error.name === 'NotAllowedError') {\n        alert('Please allow microphone access in your browser settings.');\n      } else {\n        alert('Could not start voice input. Please try again.');\n      }\n      setIsListening(false);\n    }\n  };\n  const stopListening = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    }\n  };\n  const calculateTotal = items => items.reduce((acc, item) => acc + item.quantity * item.rate, 0);\n  const handleOrderInput = (field, value) => {\n    setNewOrder(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleAddNewOrder = () => {\n    if (!newOrder.customerName) {\n      newOrder.customerName = \"Custom\";\n    }\n    const items = parsedItems.length > 0 ? parsedItems : [{\n      id: Date.now(),\n      item: \"Sample Product\",\n      brand: \"Brand X\",\n      quantity: 1,\n      rate: 100\n    }];\n    const orderWithItems = {\n      ...newOrder,\n      items: items\n    };\n    onAddOrder(orderWithItems);\n\n    // Reset state\n    setNewOrder({\n      customerName: '',\n      orderId: '',\n      items: []\n    });\n    setParsedItems([]);\n    setTranscript('');\n    onClose();\n  };\n  const parseOrder = () => {\n    try {\n      const parsed = parseMultipleOrders(transcript);\n      console.log(\"Parsed items:\", parsed);\n\n      // Map the parsed items to the format expected by your app\n      const mappedItems = parsed.map(parsedItem => {\n        // Try to find a matching product in the database\n        const matchingProduct = productDatabase.find(product => product.item.toLowerCase().includes(parsedItem.item.toLowerCase()) || parsedItem.item.toLowerCase().includes(product.item.toLowerCase()));\n        return {\n          id: Date.now() + Math.floor(Math.random() * 1000),\n          item: matchingProduct ? matchingProduct.item : parsedItem.item,\n          brand: matchingProduct ? matchingProduct.brand : \"Unknown\",\n          quantity: parsedItem.quantity || 1,\n          rate: matchingProduct ? matchingProduct.rate : 100,\n          // Default price if not found\n          unit: parsedItem.unit || \"piece\"\n        };\n      });\n      setParsedItems(mappedItems);\n    } catch (error) {\n      console.error(\"Error parsing order:\", error);\n      alert(\"Could not parse the order. Please try again or enter manually.\");\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex justify-center items-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-lg w-full max-w-md relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"absolute top-2 right-2 text-gray-600 hover:text-black\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(X, {\n          className: \"w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-4\",\n        children: \"Take Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Customer Name\",\n          className: \"w-full px-3 py-2 border rounded\",\n          value: newOrder.customerName,\n          onChange: e => handleOrderInput(\"customerName\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Order ID (Auto-generated)\",\n            className: \"w-full px-3 py-2 border rounded bg-gray-100\",\n            value: newOrder.orderId,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Enter order details or use voice input...\",\n            className: \"w-full px-3 py-2 border rounded h-32\",\n            value: transcript,\n            onChange: e => setTranscript(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between mt-2\",\n            children: [isListening ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: stopListening,\n              className: \"flex items-center bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\",\n              children: [/*#__PURE__*/_jsxDEV(MicOff, {\n                className: \"mr-1 w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this), \" Stop Listening\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: startListening,\n              className: \"flex items-center bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600\",\n              children: [/*#__PURE__*/_jsxDEV(Mic, {\n                className: \"mr-1 w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this), \" Start Listening\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: parseOrder,\n              className: \"bg-gray-200 text-gray-800 px-3 py-1 rounded hover:bg-gray-300\",\n              children: \"Parse Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), parsedItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border p-3 rounded bg-gray-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-semibold mb-2\",\n            children: \"Parsed Items:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-sm\",\n            children: parsedItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"flex justify-between mb-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [item.quantity, \" \", item.unit, \"x \", item.item, \" (\", item.brand, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\u20B9\", item.rate * item.quantity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 text-right text-sm font-semibold\",\n            children: [\"Total: \\u20B9\", calculateTotal(parsedItems)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddNewOrder,\n          className: \"w-full bg-black text-white py-2 rounded hover:bg-gray-800\",\n          children: \"Add Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateOrder, \"QZ0EFT8ysxuGxOF+rDirGzphDjs=\");\n_c = CreateOrder;\nexport default CreateOrder;\nvar _c;\n$RefreshReg$(_c, \"CreateOrder\");","map":{"version":3,"names":["React","useState","useEffect","useRef","X","Mic","MicOff","wordsToNumbers","jsxDEV","_jsxDEV","productDatabase","item","brand","rate","knownUnits","detectUnit","itemStr","console","warn","unit","words","trim","toLowerCase","split","includes","slice","join","last","length","parseMultipleOrders","transcript","error","normalized","replace","log","orders","regex","match","exec","quantity","itemText","push","parseFloat","CreateOrder","isOpen","onClose","onAddOrder","_s","newOrder","setNewOrder","customerName","orderId","items","setTranscript","isListening","setIsListening","parsedItems","setParsedItems","recognitionRef","generateOrderId","timestamp","Date","getTime","randomNum","Math","floor","random","toString","createSpeechRecognition","window","SpeechRecognition","webkitSpeechRecognition","mozSpeechRecognition","msSpeechRecognition","recognition","continuous","interimResults","maxAlternatives","lang","current","onresult","event","results","prev","onerror","alert","onend","start","e","stop","startListening","navigator","mediaDevices","getUserMedia","audio","err","name","stopListening","calculateTotal","reduce","acc","handleOrderInput","field","value","handleAddNewOrder","id","now","orderWithItems","parseOrder","parsed","mappedItems","map","parsedItem","matchingProduct","find","product","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","readOnly","index","_c","$RefreshReg$"],"sources":["/home/someone_practicing/prac/sledjeWeb/frontend/src/pages/CreateOrder.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { X, Mic, MicOff } from \"lucide-react\";\nimport { wordsToNumbers } from 'words-to-numbers';\n\n// Sample product database for order parsing\nconst productDatabase = [\n  { item: \"Product A\", brand: \"Brand X\", rate: 100 },\n  { item: \"Product B\", brand: \"Brand Y\", rate: 150 },\n  { item: \"Product C\", brand: \"Brand Z\", rate: 80 },\n  { item: \"Product D\", brand: \"Brand X\", rate: 90 },\n  { item: \"Product E\", brand: \"Brand X\", rate: 120 },\n  { item: \"Product F\", brand: \"Brand Y\", rate: 70 },\n  { item: \"Product G\", brand: \"Brand Z\", rate: 60 },\n  { item: \"Product H\", brand: \"Brand X\", rate: 200 },\n];\n\nconst knownUnits = ['kg', 'kilogram', 'g', 'gram', 'liters', 'liter', 'bottles', 'packets', 'pieces', 'dozen', 'box', 'boxes', 'l', 'ml', 'milliliter', 'cups', 'pints', 'quarts', 'ounces'];\n\nfunction detectUnit(itemStr) {\n  if (typeof itemStr !== 'string') {\n    console.warn('Expected string but got:', typeof itemStr, itemStr);\n    return { unit: 'unit', item: 'unknown' };\n  }\n  const words = itemStr.trim().toLowerCase().split(/\\s+/);\n\n  // Check if first word is a unit\n  if (knownUnits.includes(words[0])) {\n    return {\n      unit: words[0],\n      item: words.slice(1).join(' ') || 'unknown'\n    };\n  }\n\n  // Check unit at the end (e.g., \"water bottles\")\n  const last = words[words.length - 1];\n  if (knownUnits.includes(last)) {\n    return {\n      unit: last,\n      item: words.slice(0, -1).join(' ') || 'unknown'\n    };\n  }\n\n  return {\n    unit: 'unit',\n    item: itemStr.trim()\n  };\n}\n\nfunction parseMultipleOrders(transcript) {\n  if (typeof transcript !== 'string') {\n    console.error('Invalid input: transcript must be a string');\n    return [];\n  }\n\n  let normalized;\n  try {\n    transcript = transcript.replace(/[^a-zA-Z0-9\\s.,]/g, ''); // Remove unwanted characters\n    transcript = transcript.replace(/\\s+/g, ' ').trim(); // Normalize spaces\n    transcript = transcript.replace(/\\bto\\b/g, \"two\"); // Replace \"to\" with \"two\"\n    normalized = wordsToNumbers(transcript); // Convert word numbers to digits\n  } catch (error) {\n    console.error('Error converting words to numbers:', error);\n    normalized = transcript; // Fall back to original transcript if conversion fails\n  }\n  \n  console.log(\"Normalized transcript:\", normalized);\n  \n  const orders = [];\n  // Number followed by a word or words that don't contain numbers\n  const regex = /(\\d+(?:\\.\\d+)?)\\s+([a-zA-Z][a-zA-Z\\s]*?)(?=\\s+\\d+|$)/g;\n  \n  let match;\n  while ((match = regex.exec(normalized)) !== null) {\n    const [, quantity, itemText] = match;\n    const { unit, item } = detectUnit(itemText.trim());\n    \n    orders.push({\n      item,\n      quantity: parseFloat(quantity),\n      unit\n    });\n    \n    console.log(`Parsed: ${quantity} Ã— ${itemText.trim()} (${unit})`);\n  }\n  \n  return orders;\n}\n\nconst CreateOrder = ({ isOpen, onClose, onAddOrder }) => {\n  const [newOrder, setNewOrder] = useState({ customerName: '', orderId: '', items: [] });\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [parsedItems, setParsedItems] = useState([]);\n  const recognitionRef = useRef(null);\n\n  // Generate a unique order ID\n  const generateOrderId = () => {\n    const timestamp = new Date().getTime();\n    const randomNum = Math.floor(Math.random() * 1000);\n    return `ORD${timestamp.toString().slice(-4)}${randomNum}`;\n  };\n  const createSpeechRecognition = () => {\n  if (typeof window === 'undefined') return null;\n  \n  // Check for different speech recognition APIs\n  const SpeechRecognition = window.SpeechRecognition || \n                           window.webkitSpeechRecognition ||\n                           window.mozSpeechRecognition ||\n                           window.msSpeechRecognition;\n                           \n  if (!SpeechRecognition) {\n    console.warn('Speech recognition not supported');\n    return null;\n  }\n\n  const recognition = new SpeechRecognition();\n  recognition.continuous = false; // Changed to false for better mobile support\n  recognition.interimResults = false; // Changed to false for better mobile support\n  recognition.maxAlternatives = 1;\n  recognition.lang = 'en-US'; // Set language explicitly\n\n  return recognition;\n};\n  // Initialize recognition\nuseEffect(() => {\n  try {\n    if (!recognitionRef.current) {\n      recognitionRef.current = createSpeechRecognition();\n    }\n    \n    if (recognitionRef.current) {\n      recognitionRef.current.onresult = (event) => {\n        const last = event.results.length - 1;\n        const transcript = event.results[last][0].transcript;\n        setTranscript(prev => prev + ' ' + transcript);\n      };\n\n      recognitionRef.current.onerror = (event) => {\n        console.error('Speech recognition error:', event);\n        setIsListening(false);\n        \n        if (event.error === 'not-allowed') {\n          alert('Please allow microphone access to use voice input.');\n        } else if (event.error === 'no-speech') {\n          alert('No speech was detected. Please try again.');\n        }\n      };\n\n      recognitionRef.current.onend = () => {\n        setIsListening(false);\n        // Automatically restart listening on mobile\n        if (isListening) {\n          try {\n            recognitionRef.current.start();\n          } catch (e) {\n            console.error('Error restarting recognition:', e);\n          }\n        }\n      };\n    }\n  } catch (error) {\n    console.error('Error initializing speech recognition:', error);\n  }\n\n  return () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n    }\n  };\n}, [isOpen, isListening]);\n\n\nconst startListening = async () => {\n  try {\n    if (!recognitionRef.current) {\n      alert('Speech recognition is not supported in this browser. Please try using Chrome.');\n      return;\n    }\n\n    // For iOS Safari, we need to request permission differently\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      try {\n        await navigator.mediaDevices.getUserMedia({ audio: true });\n      } catch (err) {\n        console.error('Microphone permission denied:', err);\n        alert('Please allow microphone access to use voice input.');\n        return;\n      }\n    }\n\n    setTranscript('');\n    await recognitionRef.current.start();\n    setIsListening(true);\n  } catch (error) {\n    console.error('Error starting speech recognition:', error);\n    if (error.name === 'NotAllowedError') {\n      alert('Please allow microphone access in your browser settings.');\n    } else {\n      alert('Could not start voice input. Please try again.');\n    }\n    setIsListening(false);\n  }\n};\n\n  const stopListening = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    }\n  };\n\n  const calculateTotal = (items) =>\n    items.reduce((acc, item) => acc + item.quantity * item.rate, 0);\n\n  const handleOrderInput = (field, value) => {\n    setNewOrder((prev) => ({ ...prev, [field]: value }));\n  };\n\n  const handleAddNewOrder = () => {\n    if (!newOrder.customerName) {\n      newOrder.customerName = \"Custom\";\n    }\n    \n    const items = parsedItems.length > 0 ? parsedItems : [\n      { id: Date.now(), item: \"Sample Product\", brand: \"Brand X\", quantity: 1, rate: 100 }\n    ];\n    \n    const orderWithItems = {\n      ...newOrder,\n      items: items\n    };\n    \n    onAddOrder(orderWithItems);\n    \n    // Reset state\n    setNewOrder({ customerName: '', orderId: '', items: [] });\n    setParsedItems([]);\n    setTranscript('');\n    onClose();\n  };\n\n  const parseOrder = () => {\n    try {\n      const parsed = parseMultipleOrders(transcript);\n      console.log(\"Parsed items:\", parsed);\n      \n      // Map the parsed items to the format expected by your app\n      const mappedItems = parsed.map(parsedItem => {\n        // Try to find a matching product in the database\n        const matchingProduct = productDatabase.find(\n          product => product.item.toLowerCase().includes(parsedItem.item.toLowerCase()) ||\n                    parsedItem.item.toLowerCase().includes(product.item.toLowerCase())\n        );\n        \n        return {\n          id: Date.now() + Math.floor(Math.random() * 1000),\n          item: matchingProduct ? matchingProduct.item : parsedItem.item,\n          brand: matchingProduct ? matchingProduct.brand : \"Unknown\",\n          quantity: parsedItem.quantity || 1,\n          rate: matchingProduct ? matchingProduct.rate : 100, // Default price if not found\n          unit: parsedItem.unit || \"piece\"\n        };\n      });\n      \n      setParsedItems(mappedItems);\n    } catch (error) {\n      console.error(\"Error parsing order:\", error);\n      alert(\"Could not parse the order. Please try again or enter manually.\");\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex justify-center items-center z-50\">\n      <div className=\"bg-white p-6 rounded-lg shadow-lg w-full max-w-md relative\">\n        <button\n          className=\"absolute top-2 right-2 text-gray-600 hover:text-black\"\n          onClick={onClose}\n        >\n          <X className=\"w-5 h-5\" />\n        </button>\n        <h2 className=\"text-lg font-semibold mb-4\">Take Order</h2>\n        <div className=\"space-y-4\">\n          <input\n            type=\"text\"\n            placeholder=\"Customer Name\"\n            className=\"w-full px-3 py-2 border rounded\"\n            value={newOrder.customerName}\n            onChange={(e) => handleOrderInput(\"customerName\", e.target.value)}\n          />\n          <div className=\"flex items-center\">\n            <input\n              type=\"text\"\n              placeholder=\"Order ID (Auto-generated)\"\n              className=\"w-full px-3 py-2 border rounded bg-gray-100\"\n              value={newOrder.orderId}\n              readOnly\n            />\n          </div>\n          \n          <div className=\"relative\">\n            <textarea\n              placeholder=\"Enter order details or use voice input...\"\n              className=\"w-full px-3 py-2 border rounded h-32\"\n              value={transcript}\n              onChange={(e) => setTranscript(e.target.value)}\n            ></textarea>\n            \n            <div className=\"flex justify-between mt-2\">\n              {isListening ? (\n                <button\n                  onClick={stopListening}\n                  className=\"flex items-center bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\"\n                >\n                  <MicOff className=\"mr-1 w-4 h-4\" /> Stop Listening\n                </button>\n              ) : (\n                <button\n                  onClick={startListening}\n                  className=\"flex items-center bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600\"\n                >\n                  <Mic className=\"mr-1 w-4 h-4\" /> Start Listening\n                </button>\n              )}\n              \n              <button\n                onClick={parseOrder}\n                className=\"bg-gray-200 text-gray-800 px-3 py-1 rounded hover:bg-gray-300\"\n              >\n                Parse Order\n              </button>\n            </div>\n          </div>\n          \n          {parsedItems.length > 0 && (\n            <div className=\"border p-3 rounded bg-gray-50\">\n              <h3 className=\"text-sm font-semibold mb-2\">Parsed Items:</h3>\n              <ul className=\"text-sm\">\n                {parsedItems.map((item, index) => (\n                  <li key={index} className=\"flex justify-between mb-1\">\n                    <span>{item.quantity} {item.unit}x {item.item} ({item.brand})</span>\n                    <span>â‚¹{item.rate * item.quantity}</span>\n                  </li>\n                ))}\n              </ul>\n              <div className=\"mt-2 text-right text-sm font-semibold\">\n                Total: â‚¹{calculateTotal(parsedItems)}\n              </div>\n            </div>\n          )}\n          \n          <button\n            onClick={handleAddNewOrder}\n            className=\"w-full bg-black text-white py-2 rounded hover:bg-gray-800\"\n          >\n            Add Order\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateOrder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}