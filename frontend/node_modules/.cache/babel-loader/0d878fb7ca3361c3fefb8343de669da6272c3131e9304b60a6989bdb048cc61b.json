{"ast":null,"code":"var _jsxFileName = \"/Users/nishant/Desktop/sledgeNew/sledjeWeb/frontend/src/components/CarouselGrid.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CARD_WIDTH = 220;\nconst CARD_HEIGHT = 180;\nconst GAP = 16; // Tailwind gap-4 = 1rem = 16px\n\nconst CarouselGrid = ({\n  orders,\n  renderOrderCard\n}) => {\n  // Calculate number of columns (max 3)\n  const columns = Math.min(orders.length, 3);\n  // Calculate number of rows (max 2)\n  const rows = orders.length > 3 ? Math.min(Math.ceil(orders.length / 3), 2) : 1;\n  // Cards per \"page\"\n  const visibleCards = Math.min(orders.length, 6);\n\n  // Dynamic width: up to 3 cards (max 2/3), then scroll\n  const visibleCols = Math.min(orders.length, 3);\n  const gridWidth = visibleCols * CARD_WIDTH + (visibleCols - 1) * GAP;\n  // Dynamic height: 1 or 2 rows\n  const visibleRows = orders.length > 3 ? 2 : 1;\n  const gridHeight = visibleRows * CARD_HEIGHT + (visibleRows - 1) * GAP;\n\n  // Total width for all cards (for scrolling)\n  const totalCols = Math.ceil(orders.length / 2);\n  const scrollWidth = Math.ceil(orders.length / 2) * (3 * CARD_WIDTH + 2 * GAP);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overflow-x-auto transition-all duration-300\",\n    style: {\n      width: `${gridWidth}px`,\n      maxWidth: \"100%\",\n      minWidth: \"220px\",\n      height: `${gridHeight}px`,\n      maxHeight: \"400px\",\n      background: \"transparent\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-4\",\n      style: {\n        gridTemplateColumns: `repeat(${orders.length > 6 ? Math.ceil(orders.length / 2) * 3 : visibleCols}, ${CARD_WIDTH}px)`,\n        gridTemplateRows: `repeat(${visibleRows}, ${CARD_HEIGHT}px)`,\n        width: orders.length > 6 ? `${scrollWidth}px` : `${gridWidth}px`,\n        minHeight: `${gridHeight}px`,\n        transition: \"width 0.3s, height 0.3s\"\n      },\n      children: orders.map((order, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderOrderCard(order)\n      }, order.orderId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = CarouselGrid;\nexport default CarouselGrid;\nvar _c;\n$RefreshReg$(_c, \"CarouselGrid\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CARD_WIDTH","CARD_HEIGHT","GAP","CarouselGrid","orders","renderOrderCard","columns","Math","min","length","rows","ceil","visibleCards","visibleCols","gridWidth","visibleRows","gridHeight","totalCols","scrollWidth","className","style","width","maxWidth","minWidth","height","maxHeight","background","children","gridTemplateColumns","gridTemplateRows","minHeight","transition","map","order","idx","orderId","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nishant/Desktop/sledgeNew/sledjeWeb/frontend/src/components/CarouselGrid.js"],"sourcesContent":["import React from \"react\";\n\nconst CARD_WIDTH = 220;\nconst CARD_HEIGHT = 180;\nconst GAP = 16; // Tailwind gap-4 = 1rem = 16px\n\nconst CarouselGrid = ({ orders, renderOrderCard }) => {\n  // Calculate number of columns (max 3)\n  const columns = Math.min(orders.length, 3);\n  // Calculate number of rows (max 2)\n  const rows = orders.length > 3 ? Math.min(Math.ceil(orders.length / 3), 2) : 1;\n  // Cards per \"page\"\n  const visibleCards = Math.min(orders.length, 6);\n\n  // Dynamic width: up to 3 cards (max 2/3), then scroll\n  const visibleCols = Math.min(orders.length, 3);\n  const gridWidth = visibleCols * CARD_WIDTH + (visibleCols - 1) * GAP;\n  // Dynamic height: 1 or 2 rows\n  const visibleRows = orders.length > 3 ? 2 : 1;\n  const gridHeight = visibleRows * CARD_HEIGHT + (visibleRows - 1) * GAP;\n\n  // Total width for all cards (for scrolling)\n  const totalCols = Math.ceil(orders.length / 2);\n  const scrollWidth =\n    Math.ceil(orders.length / 2) * (3 * CARD_WIDTH + 2 * GAP);\n\n  return (\n    <div\n      className=\"overflow-x-auto transition-all duration-300\"\n      style={{\n        width: `${gridWidth}px`,\n        maxWidth: \"100%\",\n        minWidth: \"220px\",\n        height: `${gridHeight}px`,\n        maxHeight: \"400px\",\n        background: \"transparent\",\n      }}\n    >\n      <div\n        className=\"grid gap-4\"\n        style={{\n          gridTemplateColumns: `repeat(${orders.length > 6 ? Math.ceil(orders.length / 2) * 3 : visibleCols}, ${CARD_WIDTH}px)`,\n          gridTemplateRows: `repeat(${visibleRows}, ${CARD_HEIGHT}px)`,\n          width: orders.length > 6 ? `${scrollWidth}px` : `${gridWidth}px`,\n          minHeight: `${gridHeight}px`,\n          transition: \"width 0.3s, height 0.3s\",\n        }}\n      >\n        {orders.map((order, idx) => (\n          <div key={order.orderId}>\n            {renderOrderCard(order)}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CarouselGrid;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}