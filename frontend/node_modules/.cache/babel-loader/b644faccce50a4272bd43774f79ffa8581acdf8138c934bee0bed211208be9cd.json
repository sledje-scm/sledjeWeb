{"ast":null,"code":"var _jsxFileName = \"/Users/nishant/Desktop/sledgeNew/sledjeWeb/frontend/src/pages/Shop.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, Suspense, useRef } from \"react\";\nimport { Trash, Check, FileText, ArrowDown, ArrowUp, PlusCircle, X, Mic, MicOff } from \"lucide-react\";\nimport { wordsToNumbers } from 'words-to-numbers';\n// We don't need lazy loading since we'll use our own parsing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyOrders = [{\n  customerName: \"Ramesh Kumar\",\n  orderId: \"ORD123\",\n  items: [{\n    id: 1,\n    item: \"Basmati Rice\",\n    brand: \"India Gate\",\n    quantity: 2,\n    rate: 120\n  }, {\n    id: 2,\n    item: \"Tur Dal\",\n    brand: \"Tata Sampann\",\n    quantity: 1,\n    rate: 150\n  }, {\n    id: 3,\n    item: \"Wheat Flour\",\n    brand: \"Aashirvaad\",\n    quantity: 3,\n    rate: 50\n  }]\n}, {\n  customerName: \"Sita Sharma\",\n  orderId: \"ORD456\",\n  items: [{\n    id: 4,\n    item: \"Mustard Oil\",\n    brand: \"Fortune\",\n    quantity: 2,\n    rate: 180\n  }, {\n    id: 5,\n    item: \"Sugar\",\n    brand: \"Madhur\",\n    quantity: 1,\n    rate: 45\n  }, {\n    id: 6,\n    item: \"Tea Powder\",\n    brand: \"Tata Tea\",\n    quantity: 2,\n    rate: 250\n  }]\n}, {\n  customerName: \"Amit Verma\",\n  orderId: \"ORD789\",\n  items: [{\n    id: 7,\n    item: \"Salt\",\n    brand: \"Tata Salt\",\n    quantity: 3,\n    rate: 20\n  }, {\n    id: 8,\n    item: \"Ghee\",\n    brand: \"Amul\",\n    quantity: 1,\n    rate: 550\n  }]\n}, {\n  customerName: \"Priya Singh\",\n  orderId: \"ORD101\",\n  items: [{\n    id: 9,\n    item: \"Besan\",\n    brand: \"Rajdhani\",\n    quantity: 4,\n    rate: 60\n  }, {\n    id: 10,\n    item: \"Chilli Powder\",\n    brand: \"Everest\",\n    quantity: 2,\n    rate: 90\n  }]\n}, {\n  customerName: \"Rahul Gupta\",\n  orderId: \"ORD102\",\n  items: [{\n    id: 11,\n    item: \"Paneer\",\n    brand: \"Amul\",\n    quantity: 1,\n    rate: 300\n  }, {\n    id: 12,\n    item: \"Curd\",\n    brand: \"Mother Dairy\",\n    quantity: 3,\n    rate: 50\n  }]\n}, {\n  customerName: \"Anjali Mehta\",\n  orderId: \"ORD122\",\n  items: [{\n    id: 13,\n    item: \"Coconut Oil\",\n    brand: \"Parachute\",\n    quantity: 1,\n    rate: 200\n  }, {\n    id: 14,\n    item: \"Soap\",\n    brand: \"Lux\",\n    quantity: 3,\n    rate: 40\n  }]\n}, {\n  customerName: \"Eebu Hatela\",\n  orderId: \"ORD162\",\n  items: [{\n    id: 13,\n    item: \"Diddy Oil\",\n    brand: \"Diddy\",\n    quantity: 1,\n    rate: 200\n  }, {\n    id: 14,\n    item: \"Soap\",\n    brand: \"\",\n    quantity: 3,\n    rate: 40\n  }]\n}];\n\n// Sample product database for order parsing\nconst productDatabase = [{\n  item: \"Basmati Rice\",\n  brand: \"India Gate\",\n  rate: 120\n}, {\n  item: \"Tur Dal\",\n  brand: \"Tata Sampann\",\n  rate: 150\n}, {\n  item: \"Wheat Flour\",\n  brand: \"Aashirvaad\",\n  rate: 50\n}, {\n  item: \"Mustard Oil\",\n  brand: \"Fortune\",\n  rate: 180\n}, {\n  item: \"Sugar\",\n  brand: \"Madhur\",\n  rate: 45\n}, {\n  item: \"Tea Powder\",\n  brand: \"Tata Tea\",\n  rate: 250\n}, {\n  item: \"Salt\",\n  brand: \"Tata Salt\",\n  rate: 20\n}, {\n  item: \"Ghee\",\n  brand: \"Amul\",\n  rate: 550\n}, {\n  item: \"Besan\",\n  brand: \"Rajdhani\",\n  rate: 60\n}, {\n  item: \"Chilli Powder\",\n  brand: \"Everest\",\n  rate: 90\n}, {\n  item: \"Paneer\",\n  brand: \"Amul\",\n  rate: 300\n}, {\n  item: \"Curd\",\n  brand: \"Mother Dairy\",\n  rate: 50\n}, {\n  item: \"Coconut Oil\",\n  brand: \"Parachute\",\n  rate: 200\n}, {\n  item: \"Soap\",\n  brand: \"Lux\",\n  rate: 40\n}, {\n  item: \"Shampoo\",\n  brand: \"Dove\",\n  rate: 250\n}, {\n  item: \"Toothpaste\",\n  brand: \"Colgate\",\n  rate: 90\n}];\nconst Shop = () => {\n  _s();\n  const [upcomingOrders, setUpcomingOrders] = useState(dummyOrders);\n  const [paymentOrders, setPaymentOrders] = useState([{\n    customerName: \"Vikram Chawla\",\n    orderId: \"ORD987\",\n    items: [{\n      id: 15,\n      item: \"Shampoo\",\n      brand: \"Dove\",\n      quantity: 1,\n      rate: 250\n    }, {\n      id: 16,\n      item: \"Toothpaste\",\n      brand: \"Colgate\",\n      quantity: 2,\n      rate: 90\n    }]\n  }, {\n    customerName: \"Neha Kapoor\",\n    orderId: \"ORD654\",\n    items: [{\n      id: 17,\n      item: \"Soap\",\n      brand: \"Lux\",\n      quantity: 4,\n      rate: 40\n    }, {\n      id: 18,\n      item: \"Paneer\",\n      brand: \"Amul\",\n      quantity: 1,\n      rate: 300\n    }]\n  }]);\n  const [completedOrders, setCompletedOrders] = useState([{\n    customerName: \"Ramesh Kumar\",\n    orderId: \"ORD123\",\n    items: [{\n      id: 1,\n      item: \"Basmati Rice\",\n      brand: \"India Gate\",\n      quantity: 2,\n      rate: 120\n    }, {\n      id: 2,\n      item: \"Tur Dal\",\n      brand: \"Tata Sampann\",\n      quantity: 1,\n      rate: 150\n    }],\n    mode: \"cash\",\n    date: \"26/05/2025\",\n    time: \"10:30 AM\"\n  }, {\n    customerName: \"Sita Sharma\",\n    orderId: \"ORD456\",\n    items: [{\n      id: 4,\n      item: \"Mustard Oil\",\n      brand: \"Fortune\",\n      quantity: 2,\n      rate: 180\n    }, {\n      id: 5,\n      item: \"Sugar\",\n      brand: \"Madhur\",\n      quantity: 1,\n      rate: 45\n    }],\n    mode: \"upi\",\n    date: \"25/05/2025\",\n    time: \"3:45 PM\"\n  }, {\n    customerName: \"Amit Verma\",\n    orderId: \"ORD789\",\n    items: [{\n      id: 7,\n      item: \"Salt\",\n      brand: \"Tata Salt\",\n      quantity: 3,\n      rate: 20\n    }, {\n      id: 8,\n      item: \"Ghee\",\n      brand: \"Amul\",\n      quantity: 1,\n      rate: 550\n    }],\n    mode: \"credit\",\n    date: \"24/05/2025\",\n    time: \"1:15 PM\"\n  }]);\n  const [expandedCards, setExpandedCards] = useState({});\n  const [showReports, setShowReports] = useState(false);\n  const [showOrderModal, setShowOrderModal] = useState(false);\n  const [newOrder, setNewOrder] = useState({\n    customerName: '',\n    orderId: '',\n    items: []\n  });\n  const [sortMode, setSortMode] = useState(\"none\");\n\n  // States for voice input\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [parsedItems, setParsedItems] = useState([]);\n  const recognitionRef = useRef(null);\n\n  // Generate a unique order ID\n  const generateOrderId = () => {\n    const timestamp = new Date().getTime();\n    const randomNum = Math.floor(Math.random() * 1000);\n    return `ORD${timestamp.toString().slice(-4)}${randomNum}`;\n  };\n\n  // Initialize recognition\n  useEffect(() => {\n    if (typeof window !== 'undefined' && 'webkitSpeechRecognition' in window) {\n      const SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\n      recognitionRef.current = new SpeechRecognition();\n      recognitionRef.current.continuous = true;\n      recognitionRef.current.interimResults = true;\n      recognitionRef.current.onresult = event => {\n        let interimTranscript = '';\n        for (let i = event.resultIndex; i < event.results.length; i++) {\n          const transcript = event.results[i][0].transcript;\n          if (event.results[i].isFinal) {\n            setTranscript(prev => prev + ' ' + transcript);\n          } else {\n            interimTranscript += transcript;\n          }\n        }\n      };\n      recognitionRef.current.onerror = event => {\n        console.error('Speech recognition error', event.error);\n        setIsListening(false);\n      };\n    }\n\n    // Set default order ID when modal opens\n    if (showOrderModal) {\n      setNewOrder(prev => ({\n        ...prev,\n        orderId: generateOrderId()\n      }));\n    }\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n    };\n  }, [showOrderModal]);\n  const startListening = () => {\n    setTranscript('');\n    if (recognitionRef.current) {\n      recognitionRef.current.start();\n      setIsListening(true);\n    } else {\n      alert('Speech recognition is not supported in this browser.');\n    }\n  };\n  const stopListening = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    }\n  };\n\n  // Use a simple parsing function instead of compromise\n\n  const knownUnits = ['kg', 'kilogram', 'g', 'gram', 'liters', 'liter', 'bottles', 'packets', 'pieces', 'dozen', 'box', 'boxes', 'l', 'ml', 'milliliter', 'cups', 'pints', 'quarts', 'ounces'];\n  function detectUnit(itemStr) {\n    if (typeof itemStr !== 'string') {\n      console.warn('Expected string but got:', typeof itemStr, itemStr);\n      return {\n        unit: 'unit',\n        item: 'unknown'\n      };\n    }\n    const words = itemStr.trim().toLowerCase().split(/\\s+/);\n\n    // Check if first word is a unit\n    if (knownUnits.includes(words[0])) {\n      return {\n        unit: words[0],\n        item: words.slice(1).join(' ') || 'unknown'\n      };\n    }\n\n    // Check unit at the end (e.g., \"water bottles\")\n    const last = words[words.length - 1];\n    if (knownUnits.includes(last)) {\n      return {\n        unit: last,\n        item: words.slice(0, -1).join(' ') || 'unknown'\n      };\n    }\n    return {\n      unit: 'unit',\n      item: itemStr.trim()\n    };\n  }\n  function parseMultipleOrders(transcript) {\n    if (typeof transcript !== 'string') {\n      console.error('Invalid input: transcript must be a string');\n      return [];\n    }\n    let normalized;\n    try {\n      transcript = transcript.replace(/[^a-zA-Z0-9\\s.,]/g, ''); // Remove unwanted characters\n      transcript = transcript.replace(/\\s+/g, ' ').trim(); // Normalize spaces\n      transcript = transcript.replace(/\\bto\\b/g, \"two\"); // Replace \"to\" with \"two\"\n      normalized = wordsToNumbers(transcript); // Convert word numbers to digits\n    } catch (error) {\n      console.error('Error converting words to numbers:', error);\n      normalized = transcript; // Fall back to original transcript if conversion fails\n    }\n    console.log(\"Normalized transcript:\", normalized);\n    const orders = [];\n    // Number followed by a word or words that don't contain numbers\n    const regex = /(\\d+(?:\\.\\d+)?)\\s+([a-zA-Z][a-zA-Z\\s]*?)(?=\\s+\\d+|$)/g;\n    let match;\n    while ((match = regex.exec(normalized)) !== null) {\n      const [, quantity, itemText] = match;\n      const {\n        unit,\n        item\n      } = detectUnit(itemText.trim());\n      orders.push({\n        item,\n        quantity: parseFloat(quantity),\n        unit\n      });\n      console.log(`Parsed: ${quantity} × ${itemText.trim()} (${unit})`);\n    }\n    return orders;\n  }\n  const toggleExpand = orderId => {\n    setExpandedCards(prev => ({\n      ...prev,\n      [orderId]: !prev[orderId]\n    }));\n  };\n  const moveToPayment = orderId => {\n    const order = upcomingOrders.find(o => o.orderId === orderId);\n    setPaymentOrders(prev => [...prev, order]);\n    setUpcomingOrders(prev => prev.filter(o => o.orderId !== orderId));\n  };\n  const deleteOrderCard = orderId => {\n    if (window.confirm(\"Are you sure to delete this order?\")) {\n      setUpcomingOrders(prev => prev.filter(o => o.orderId !== orderId));\n    }\n  };\n  const deleteItem = (orderId, itemId) => {\n    setUpcomingOrders(prev => prev.map(o => o.orderId === orderId ? {\n      ...o,\n      items: o.items.filter(item => item.id !== itemId)\n    } : o));\n  };\n  const handlePayment = (orderId, mode) => {\n    const now = new Date();\n    const order = paymentOrders.find(o => o.orderId === orderId);\n    const bill = {\n      ...order,\n      mode,\n      date: now.toLocaleDateString(),\n      time: now.toLocaleTimeString()\n    };\n    console.log(\"Generated Bill:\", bill);\n    if (mode === \"credit\") {\n      alert(\"Credit bill generated. Redirect to borrower's page...\");\n    } else {\n      alert(\"Paid bill generated.\");\n    }\n    setPaymentOrders(prev => prev.filter(o => o.orderId !== orderId));\n    setCompletedOrders(prev => [...prev, bill]);\n  };\n  const calculateTotal = items => items.reduce((acc, item) => acc + item.quantity * item.rate, 0);\n  const calculateRevenue = () => {\n    return completedOrders.reduce((total, order) => {\n      return total + calculateTotal(order.items);\n    }, 0);\n  };\n  const calculateProfit = () => {\n    return calculateRevenue() * 0.2;\n  };\n  const sortedUpcomingOrders = [...upcomingOrders].sort((a, b) => {\n    const totalA = calculateTotal(a.items);\n    const totalB = calculateTotal(b.items);\n    if (sortMode === \"asc\") return totalA - totalB;\n    if (sortMode === \"desc\") return totalB - totalA;\n    return 0;\n  });\n  const renderOrderCard = (order, isPayment = false) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-md p-4\" // Fixed width for 3 cards in a row\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-md font-bold\",\n        children: order.customerName || \"Custom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Trash, {\n        className: \"w-4 h-4 text-red-500 cursor-pointer\",\n        onClick: () => deleteOrderCard(order.orderId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [(expandedCards[order.orderId] ? order.items : order.items.slice(0, 3)).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center text-sm border-b py-1 last:border-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [item.item, \" (\", item.brand, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 text-sm font-semibold\",\n        children: [\"Total: \\u20B9\", calculateTotal(order.items)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-500\",\n        children: [\"Order ID: \", order.orderId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), !isPayment ? /*#__PURE__*/_jsxDEV(Check, {\n        className: \"w-5 h-5 text-green-600 cursor-pointer mt-2\",\n        onClick: () => moveToPayment(order.orderId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2 mt-2\",\n        children: [\"cash\", \"upi\", \"credit\"].map(mode => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePayment(order.orderId, mode),\n          className: \"text-xs px-2 py-1 bg-black text-white rounded-full\",\n          children: mode.toUpperCase()\n        }, mode, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)]\n  }, order.orderId, true, {\n    fileName: _jsxFileName,\n    lineNumber: 358,\n    columnNumber: 5\n  }, this);\n  const handleOrderInput = (field, value) => {\n    setNewOrder(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleAddNewOrder = () => {\n    if (!newOrder.customerName) {\n      newOrder.customerName = \"Custom\";\n      return;\n    }\n    const items = parsedItems.length > 0 ? parsedItems : [{\n      id: Date.now(),\n      item: \"Sample Product\",\n      brand: \"Brand X\",\n      quantity: 1,\n      rate: 100\n    }];\n    const orderWithItems = {\n      ...newOrder,\n      items: items\n    };\n    setUpcomingOrders(prev => [...prev, orderWithItems]);\n    setShowOrderModal(false);\n    setNewOrder({\n      customerName: '',\n      orderId: '',\n      items: []\n    });\n    setParsedItems([]);\n    setTranscript('');\n  };\n  const getDynamicBackgroundColor = orderCount => {\n    if (orderCount === 0) return \"bg-gray-200\"; // No orders\n    if (orderCount <= 3) return \"bg-blue-200\"; // Few orders\n    if (orderCount <= 6) return \"bg-blue-400\"; // Moderate orders\n    return \"bg-blue-600\"; // Many orders\n  };\n  const getDynamicHeight = orderCount => {\n    if (orderCount === 0) return \"h-32\"; // Small height for no orders\n    if (orderCount <= 3) return \"h-48\"; // Medium height for a few orders\n    if (orderCount <= 6) return \"h-64\"; // Larger height for moderate orders\n    return \"h-auto\"; // Auto height for many orders\n  };\n  const getDynamicWidth = orderCount => {\n    if (orderCount === 0) return \"w-1/3\"; // Small width for no orders\n    if (orderCount <= 3) return \"w-1/2\"; // Medium width for a few orders\n    if (orderCount <= 6) return \"w-2/3\"; // Larger width for moderate orders\n    return \"w-full\"; // Full width for many orders\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 space-y-8 bg-white min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"Shop Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowOrderModal(true),\n          className: \"flex items-center bg-black text-white px-4 py-2 rounded-full hover:bg-gray-800\",\n          children: [/*#__PURE__*/_jsxDEV(PlusCircle, {\n            className: \"mr-2 w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 3\n          }, this), \" Create Order\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 1\n        }, this), showOrderModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex justify-center items-center z-50\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-lg shadow-lg w-full max-w-md relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"absolute top-2 right-2 text-gray-600 hover:text-black\",\n              onClick: () => setShowOrderModal(false),\n              children: /*#__PURE__*/_jsxDEV(X, {\n                className: \"w-5 h-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-semibold mb-4\",\n              children: \"Take Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Customer Name\",\n                className: \"w-full px-3 py-2 border rounded\",\n                value: newOrder.customerName,\n                onChange: e => handleOrderInput(\"customerName\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Order ID (Auto-generated)\",\n                  className: \"w-full px-3 py-2 border rounded bg-gray-100\",\n                  value: newOrder.orderId,\n                  readOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative\",\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  placeholder: \"Enter order details or use voice input...\",\n                  className: \"w-full px-3 py-2 border rounded h-32\",\n                  value: transcript,\n                  onChange: e => setTranscript(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between mt-2\",\n                  children: [isListening ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: stopListening,\n                    className: \"flex items-center bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\",\n                    children: [/*#__PURE__*/_jsxDEV(MicOff, {\n                      className: \"mr-1 w-4 h-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 514,\n                      columnNumber: 17\n                    }, this), \" Stop Listening\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 15\n                  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: startListening,\n                    className: \"flex items-center bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600\",\n                    children: [/*#__PURE__*/_jsxDEV(Mic, {\n                      className: \"mr-1 w-4 h-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 521,\n                      columnNumber: 17\n                    }, this), \" Start Listening\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      try {\n                        const parsed = parseMultipleOrders(transcript);\n                        console.log(\"Parsed items:\", parsed);\n                        const mappedItems = parsed.map(parsedItem => {\n                          const matchingProduct = productDatabase.find(product => product.item.toLowerCase().includes(parsedItem.item.toLowerCase()) || parsedItem.item.toLowerCase().includes(product.item.toLowerCase()));\n                          return {\n                            id: Date.now() + Math.floor(Math.random() * 1000),\n                            item: matchingProduct ? matchingProduct.item : parsedItem.item,\n                            brand: matchingProduct ? matchingProduct.brand : \"Unknown\",\n                            quantity: parsedItem.quantity || 1,\n                            rate: matchingProduct ? matchingProduct.rate : 100,\n                            unit: parsedItem.unit || \"piece\"\n                          };\n                        });\n                        setParsedItems(mappedItems);\n                      } catch (error) {\n                        console.error(\"Error parsing order:\", error);\n                        alert(\"Could not parse the order. Please try again or enter manually.\");\n                      }\n                    },\n                    className: \"bg-gray-200 text-gray-800 px-3 py-1 rounded hover:bg-gray-300\",\n                    children: \"Parse Order\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 524,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 9\n              }, this), parsedItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border p-3 rounded bg-gray-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-sm font-semibold mb-2\",\n                  children: \"Parsed Items:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"text-sm\",\n                  children: parsedItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"flex justify-between mb-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [item.quantity, \" \", item.unit, \"x \", item.item, \" (\", item.brand, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 566,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"\\u20B9\", item.rate * item.quantity]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 569,\n                      columnNumber: 19\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 565,\n                    columnNumber: 17\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-2 text-right text-sm font-semibold\",\n                  children: [\"Total: \\u20B9\", calculateTotal(parsedItems)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleAddNewOrder,\n                className: \"w-full bg-black text-white py-2 rounded hover:bg-gray-800\",\n                children: \"Add Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowReports(!showReports),\n          className: \"flex items-center bg-black text-white px-4 py-2 rounded-full hover:bg-gray-800\",\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"mr-2 w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 13\n          }, this), \" Reports\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row gap-6 pb-24\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: `bg-blue-800 p-4 rounded-lg shadow-md transition-all duration-300 ${getDynamicHeight(upcomingOrders.length)} ${getDynamicWidth(upcomingOrders.length)} flex-1`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-white mb-2\",\n          children: \"Upcoming Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-3 gap-4 pb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSortMode(sortMode === \"asc\" ? \"desc\" : \"asc\"),\n            className: \"flex items-center bg-gray-200 px-3 py-1 text-sm rounded hover:bg-gray-300\",\n            children: [\"Sort by Total\", \" \", sortMode === \"asc\" ? /*#__PURE__*/_jsxDEV(ArrowUp, {\n              className: \"w-4 h-4 ml-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(ArrowDown, {\n              className: \"w-4 h-4 ml-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-3 gap-4 pb-2 overflow-y-auto\",\n          style: {\n            maxHeight: \"400px\"\n          } // Adjust height to fit 6 cards (2 rows)\n          ,\n          children: upcomingOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-300\",\n            children: \"No upcoming orders.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 15\n          }, this) : sortedUpcomingOrders.map(order => renderOrderCard(order))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: `bg-blue-800 p-4 rounded-lg shadow-md transition-all duration-300 ${getDynamicHeight(paymentOrders.length)} ${getDynamicWidth(paymentOrders.length)} flex-1`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-white mb-2\",\n          children: \"Payment Section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-3 gap-4 pb-2 overflow-y-auto\",\n          style: {\n            maxHeight: \"400px\"\n          } // Adjust height to fit 6 cards (2 rows)\n          ,\n          children: paymentOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-300\",\n            children: \"No orders in payment section.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 15\n          }, this) : paymentOrders.map(order => renderOrderCard(order, true))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"bg-blue-800 p-4 rounded-lg shadow-md transition-all duration-300 flex-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold text-white mb-2\",\n        children: \"Transaction History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-6 gap-4 overflow-x-auto\",\n        style: {\n          maxHeight: \"150px\"\n        } // Adjust height for 1 row\n        ,\n        children: completedOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300 col-span-6\",\n          children: \"No transactions available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 13\n        }, this) : completedOrders.slice(-6) // Show only the 6 most recent transactions\n        .map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md p-4 flex flex-col justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-bold text-gray-800\",\n            children: order.customerName || \"Custom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500\",\n            children: [\"Order ID: \", order.orderId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm font-semibold text-gray-700\",\n            children: [\"Total: \\u20B9\", calculateTotal(order.items)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500\",\n            children: [order.date, \" at \", order.time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500\",\n            children: [\"Mode: \", order.mode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 19\n          }, this)]\n        }, order.orderId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 7\n    }, this), showReports && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 border p-4 rounded-xl bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"Business Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Revenue Today: \\u20B9\", calculateRevenue()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Profit Today: \\u20B9\", calculateProfit()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Monthly Revenue: \\u20B9\", calculateRevenue()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Monthly Profit: \\u20B9\", calculateProfit()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold mb-2\",\n          children: \"Completed Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 13\n        }, this), completedOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"No completed orders.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-sm text-gray-700 space-y-2\",\n          children: completedOrders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: order.customerName || \"Custom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 21\n            }, this), \" - #\", order.orderId, \" - \\u20B9\", calculateTotal(order.items), \" - \", order.mode.toUpperCase(), \" on \", order.date, \" at \", order.time]\n          }, order.orderId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 460,\n    columnNumber: 5\n  }, this);\n};\n_s(Shop, \"OTBduFSifFSLaE+E877hS4bgeLc=\");\n_c = Shop;\nexport default Shop;\nvar _c;\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"names":["React","useState","useEffect","Suspense","useRef","Trash","Check","FileText","ArrowDown","ArrowUp","PlusCircle","X","Mic","MicOff","wordsToNumbers","jsxDEV","_jsxDEV","dummyOrders","customerName","orderId","items","id","item","brand","quantity","rate","productDatabase","Shop","_s","upcomingOrders","setUpcomingOrders","paymentOrders","setPaymentOrders","completedOrders","setCompletedOrders","mode","date","time","expandedCards","setExpandedCards","showReports","setShowReports","showOrderModal","setShowOrderModal","newOrder","setNewOrder","sortMode","setSortMode","transcript","setTranscript","isListening","setIsListening","parsedItems","setParsedItems","recognitionRef","generateOrderId","timestamp","Date","getTime","randomNum","Math","floor","random","toString","slice","window","SpeechRecognition","webkitSpeechRecognition","current","continuous","interimResults","onresult","event","interimTranscript","i","resultIndex","results","length","isFinal","prev","onerror","console","error","stop","startListening","start","alert","stopListening","knownUnits","detectUnit","itemStr","warn","unit","words","trim","toLowerCase","split","includes","join","last","parseMultipleOrders","normalized","replace","log","orders","regex","match","exec","itemText","push","parseFloat","toggleExpand","moveToPayment","order","find","o","filter","deleteOrderCard","confirm","deleteItem","itemId","map","handlePayment","now","bill","toLocaleDateString","toLocaleTimeString","calculateTotal","reduce","acc","calculateRevenue","total","calculateProfit","sortedUpcomingOrders","sort","a","b","totalA","totalB","renderOrderCard","isPayment","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toUpperCase","handleOrderInput","field","value","handleAddNewOrder","orderWithItems","getDynamicBackgroundColor","orderCount","getDynamicHeight","getDynamicWidth","type","placeholder","onChange","e","target","readOnly","parsed","mappedItems","parsedItem","matchingProduct","product","index","style","maxHeight","height","_c","$RefreshReg$"],"sources":["/Users/nishant/Desktop/sledgeNew/sledjeWeb/frontend/src/pages/Shop.js"],"sourcesContent":["import React, { useState, useEffect, Suspense, useRef } from \"react\";\nimport { Trash, Check, FileText, ArrowDown, ArrowUp, PlusCircle, X, Mic, MicOff } from \"lucide-react\";\nimport { wordsToNumbers } from 'words-to-numbers';\n// We don't need lazy loading since we'll use our own parsing\nconst dummyOrders = [\n  {\n    customerName: \"Ramesh Kumar\",\n    orderId: \"ORD123\",\n    items: [\n      { id: 1, item: \"Basmati Rice\", brand: \"India Gate\", quantity: 2, rate: 120 },\n      { id: 2, item: \"Tur Dal\", brand: \"Tata Sampann\", quantity: 1, rate: 150 },\n      { id: 3, item: \"Wheat Flour\", brand: \"Aashirvaad\", quantity: 3, rate: 50 },\n    ],\n  },\n  {\n    customerName: \"Sita Sharma\",\n    orderId: \"ORD456\",\n    items: [\n      { id: 4, item: \"Mustard Oil\", brand: \"Fortune\", quantity: 2, rate: 180 },\n      { id: 5, item: \"Sugar\", brand: \"Madhur\", quantity: 1, rate: 45 },\n      { id: 6, item: \"Tea Powder\", brand: \"Tata Tea\", quantity: 2, rate: 250 },\n    ],\n  },\n  {\n    customerName: \"Amit Verma\",\n    orderId: \"ORD789\",\n    items: [\n      { id: 7, item: \"Salt\", brand: \"Tata Salt\", quantity: 3, rate: 20 },\n      { id: 8, item: \"Ghee\", brand: \"Amul\", quantity: 1, rate: 550 },\n    ],\n  },\n  {\n    customerName: \"Priya Singh\",\n    orderId: \"ORD101\",\n    items: [\n      { id: 9, item: \"Besan\", brand: \"Rajdhani\", quantity: 4, rate: 60 },\n      { id: 10, item: \"Chilli Powder\", brand: \"Everest\", quantity: 2, rate: 90 },\n    ],\n  },\n  {\n    customerName: \"Rahul Gupta\",\n    orderId: \"ORD102\",\n    items: [\n      { id: 11, item: \"Paneer\", brand: \"Amul\", quantity: 1, rate: 300 },\n      { id: 12, item: \"Curd\", brand: \"Mother Dairy\", quantity: 3, rate: 50 },\n    ],\n  },\n  {\n    customerName: \"Anjali Mehta\",\n    orderId: \"ORD122\",\n    items: [\n      { id: 13, item: \"Coconut Oil\", brand: \"Parachute\", quantity: 1, rate: 200 },\n      { id: 14, item: \"Soap\", brand: \"Lux\", quantity: 3, rate: 40 },\n    ],\n  },\n  {\n    customerName: \"Eebu Hatela\",\n    orderId: \"ORD162\",\n    items: [\n      { id: 13, item: \"Diddy Oil\", brand: \"Diddy\", quantity: 1, rate: 200 },\n      { id: 14, item: \"Soap\", brand: \"\", quantity: 3, rate: 40 },\n    ],\n  },\n];\n\n// Sample product database for order parsing\nconst productDatabase = [\n  { item: \"Basmati Rice\", brand: \"India Gate\", rate: 120 },\n  { item: \"Tur Dal\", brand: \"Tata Sampann\", rate: 150 },\n  { item: \"Wheat Flour\", brand: \"Aashirvaad\", rate: 50 },\n  { item: \"Mustard Oil\", brand: \"Fortune\", rate: 180 },\n  { item: \"Sugar\", brand: \"Madhur\", rate: 45 },\n  { item: \"Tea Powder\", brand: \"Tata Tea\", rate: 250 },\n  { item: \"Salt\", brand: \"Tata Salt\", rate: 20 },\n  { item: \"Ghee\", brand: \"Amul\", rate: 550 },\n  { item: \"Besan\", brand: \"Rajdhani\", rate: 60 },\n  { item: \"Chilli Powder\", brand: \"Everest\", rate: 90 },\n  { item: \"Paneer\", brand: \"Amul\", rate: 300 },\n  { item: \"Curd\", brand: \"Mother Dairy\", rate: 50 },\n  { item: \"Coconut Oil\", brand: \"Parachute\", rate: 200 },\n  { item: \"Soap\", brand: \"Lux\", rate: 40 },\n  { item: \"Shampoo\", brand: \"Dove\", rate: 250 },\n  { item: \"Toothpaste\", brand: \"Colgate\", rate: 90 },\n];\n\nconst Shop = () => {\n  const [upcomingOrders, setUpcomingOrders] = useState(dummyOrders);\n  const [paymentOrders, setPaymentOrders] = useState([\n    {\n      customerName: \"Vikram Chawla\",\n      orderId: \"ORD987\",\n      items: [\n        { id: 15, item: \"Shampoo\", brand: \"Dove\", quantity: 1, rate: 250 },\n        { id: 16, item: \"Toothpaste\", brand: \"Colgate\", quantity: 2, rate: 90 },\n      ],\n    },\n    {\n      customerName: \"Neha Kapoor\",\n      orderId: \"ORD654\",\n      items: [\n        { id: 17, item: \"Soap\", brand: \"Lux\", quantity: 4, rate: 40 },\n        { id: 18, item: \"Paneer\", brand: \"Amul\", quantity: 1, rate: 300 },\n      ],\n    },\n  ]);\n  const [completedOrders, setCompletedOrders] = useState([\n    {\n      customerName: \"Ramesh Kumar\",\n      orderId: \"ORD123\",\n      items: [\n        { id: 1, item: \"Basmati Rice\", brand: \"India Gate\", quantity: 2, rate: 120 },\n        { id: 2, item: \"Tur Dal\", brand: \"Tata Sampann\", quantity: 1, rate: 150 },\n      ],\n      mode: \"cash\",\n      date: \"26/05/2025\",\n      time: \"10:30 AM\",\n    },\n    {\n      customerName: \"Sita Sharma\",\n      orderId: \"ORD456\",\n      items: [\n        { id: 4, item: \"Mustard Oil\", brand: \"Fortune\", quantity: 2, rate: 180 },\n        { id: 5, item: \"Sugar\", brand: \"Madhur\", quantity: 1, rate: 45 },\n      ],\n      mode: \"upi\",\n      date: \"25/05/2025\",\n      time: \"3:45 PM\",\n    },\n    {\n      customerName: \"Amit Verma\",\n      orderId: \"ORD789\",\n      items: [\n        { id: 7, item: \"Salt\", brand: \"Tata Salt\", quantity: 3, rate: 20 },\n        { id: 8, item: \"Ghee\", brand: \"Amul\", quantity: 1, rate: 550 },\n      ],\n      mode: \"credit\",\n      date: \"24/05/2025\",\n      time: \"1:15 PM\",\n    },\n  ]);\n  const [expandedCards, setExpandedCards] = useState({});\n  const [showReports, setShowReports] = useState(false);\n  const [showOrderModal, setShowOrderModal] = useState(false);\n  const [newOrder, setNewOrder] = useState({ customerName: '', orderId: '', items: [] });\n  const [sortMode, setSortMode] = useState(\"none\");\n  \n  // States for voice input\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [parsedItems, setParsedItems] = useState([]);\n  const recognitionRef = useRef(null);\n\n  // Generate a unique order ID\n  const generateOrderId = () => {\n    const timestamp = new Date().getTime();\n    const randomNum = Math.floor(Math.random() * 1000);\n    return `ORD${timestamp.toString().slice(-4)}${randomNum}`;\n  };\n\n  // Initialize recognition\n  useEffect(() => {\n    if (typeof window !== 'undefined' && 'webkitSpeechRecognition' in window) {\n      const SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\n      recognitionRef.current = new SpeechRecognition();\n      recognitionRef.current.continuous = true;\n      recognitionRef.current.interimResults = true;\n      \n      recognitionRef.current.onresult = (event) => {\n        let interimTranscript = '';\n        for (let i = event.resultIndex; i < event.results.length; i++) {\n          const transcript = event.results[i][0].transcript;\n          if (event.results[i].isFinal) {\n            setTranscript(prev => prev + ' ' + transcript);\n          } else {\n            interimTranscript += transcript;\n          }\n        }\n      };\n      \n      recognitionRef.current.onerror = (event) => {\n        console.error('Speech recognition error', event.error);\n        setIsListening(false);\n      };\n    }\n    \n    // Set default order ID when modal opens\n    if (showOrderModal) {\n      setNewOrder(prev => ({...prev, orderId: generateOrderId()}));\n    }\n    \n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n    };\n  }, [showOrderModal]);\n\n  const startListening = () => {\n    setTranscript('');\n    if (recognitionRef.current) {\n      recognitionRef.current.start();\n      setIsListening(true);\n    } else {\n      alert('Speech recognition is not supported in this browser.');\n    }\n  };\n\n  const stopListening = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    }\n  };\n\n  // Use a simple parsing function instead of compromise\n\n\nconst knownUnits = ['kg', 'kilogram', 'g', 'gram', 'liters', 'liter', 'bottles', 'packets', 'pieces', 'dozen', 'box', 'boxes', 'l', 'ml', 'milliliter', 'cups', 'pints', 'quarts', 'ounces'];\n\nfunction detectUnit(itemStr) {\n  if (typeof itemStr !== 'string') {\n    console.warn('Expected string but got:', typeof itemStr, itemStr);\n    return { unit: 'unit', item: 'unknown' };\n  }\n  const words = itemStr.trim().toLowerCase().split(/\\s+/);\n\n  // Check if first word is a unit\n  if (knownUnits.includes(words[0])) {\n    return {\n      unit: words[0],\n      item: words.slice(1).join(' ') || 'unknown'\n    };\n  }\n\n  // Check unit at the end (e.g., \"water bottles\")\n  const last = words[words.length - 1];\n  if (knownUnits.includes(last)) {\n    return {\n      unit: last,\n      item: words.slice(0, -1).join(' ') || 'unknown'\n    };\n  }\n\n  return {\n    unit: 'unit',\n    item: itemStr.trim()\n  };\n}\n\nfunction parseMultipleOrders(transcript) {\n  if (typeof transcript !== 'string') {\n    console.error('Invalid input: transcript must be a string');\n    return [];\n  }\n\n  let normalized;\n  try {\n\n\ttranscript = transcript.replace(/[^a-zA-Z0-9\\s.,]/g, ''); // Remove unwanted characters\n\ttranscript = transcript.replace(/\\s+/g, ' ').trim(); // Normalize spaces\n\ttranscript= transcript.replace(/\\bto\\b/g, \"two\"); // Replace \"to\" with \"two\"\n    normalized = wordsToNumbers(transcript); // Convert word numbers to digits\n  } catch (error) {\n    console.error('Error converting words to numbers:', error);\n    normalized = transcript; // Fall back to original transcript if conversion fails\n  }\n  \n  console.log(\"Normalized transcript:\", normalized);\n  \n  const orders = [];\n  // Number followed by a word or words that don't contain numbers\n  const regex = /(\\d+(?:\\.\\d+)?)\\s+([a-zA-Z][a-zA-Z\\s]*?)(?=\\s+\\d+|$)/g;\n  \n  let match;\n  while ((match = regex.exec(normalized)) !== null) {\n    const [, quantity, itemText] = match;\n    const { unit, item } = detectUnit(itemText.trim());\n    \n    orders.push({\n      item,\n      quantity: parseFloat(quantity),\n      unit\n    });\n    \n    console.log(`Parsed: ${quantity} × ${itemText.trim()} (${unit})`);\n  }\n  \n  return orders;\n}\n\n  const toggleExpand = (orderId) => {\n    setExpandedCards((prev) => ({ ...prev, [orderId]: !prev[orderId] }));\n  };\n\n  const moveToPayment = (orderId) => {\n    const order = upcomingOrders.find((o) => o.orderId === orderId);\n    setPaymentOrders((prev) => [...prev, order]);\n    setUpcomingOrders((prev) => prev.filter((o) => o.orderId !== orderId));\n  };\n\n  const deleteOrderCard = (orderId) => {\n    if (window.confirm(\"Are you sure to delete this order?\")) {\n      setUpcomingOrders((prev) => prev.filter((o) => o.orderId !== orderId));\n    }\n  };\n\n  const deleteItem = (orderId, itemId) => {\n    setUpcomingOrders((prev) =>\n      prev.map((o) =>\n        o.orderId === orderId\n          ? { ...o, items: o.items.filter((item) => item.id !== itemId) }\n          : o\n      )\n    );\n  };\n\n  const handlePayment = (orderId, mode) => {\n    const now = new Date();\n    const order = paymentOrders.find((o) => o.orderId === orderId);\n    const bill = {\n      ...order,\n      mode,\n      date: now.toLocaleDateString(),\n      time: now.toLocaleTimeString(),\n    };\n    console.log(\"Generated Bill:\", bill);\n    if (mode === \"credit\") {\n      alert(\"Credit bill generated. Redirect to borrower's page...\");\n    } else {\n      alert(\"Paid bill generated.\");\n    }\n    setPaymentOrders((prev) => prev.filter((o) => o.orderId !== orderId));\n    setCompletedOrders((prev) => [...prev, bill]);\n  };\n\n  const calculateTotal = (items) =>\n    items.reduce((acc, item) => acc + item.quantity * item.rate, 0);\n\n  const calculateRevenue = () => {\n    return completedOrders.reduce((total, order) => {\n      return total + calculateTotal(order.items);\n    }, 0);\n  };\n\n  const calculateProfit = () => {\n    return calculateRevenue() * 0.2;\n  };\n\n  const sortedUpcomingOrders = [...upcomingOrders].sort((a, b) => {\n    const totalA = calculateTotal(a.items);\n    const totalB = calculateTotal(b.items);\n    if (sortMode === \"asc\") return totalA - totalB;\n    if (sortMode === \"desc\") return totalB - totalA;\n    return 0;\n  });\n\n  const renderOrderCard = (order, isPayment = false) => (\n    <div\n      key={order.orderId}\n      className=\"bg-white rounded-lg shadow-md p-4\" // Fixed width for 3 cards in a row\n    >\n      <div className=\"flex justify-between items-center mb-2\">\n        <h2 className=\"text-md font-bold\">{order.customerName || \"Custom\"}</h2>\n        <Trash\n          className=\"w-4 h-4 text-red-500 cursor-pointer\"\n          onClick={() => deleteOrderCard(order.orderId)}\n        />\n      </div>\n      <div>\n        {(expandedCards[order.orderId]\n          ? order.items\n          : order.items.slice(0, 3)\n        ).map((item) => (\n          <div\n            key={item.id}\n            className=\"flex justify-between items-center text-sm border-b py-1 last:border-0\"\n          >\n            <div>\n              <p>\n                {item.item} ({item.brand})\n              </p>\n            </div>\n          </div>\n        ))}\n        <p className=\"mt-2 text-sm font-semibold\">\n          Total: ₹{calculateTotal(order.items)}\n        </p>\n        <p className=\"text-xs text-gray-500\">Order ID: {order.orderId}</p>\n{!isPayment ? (\n          <Check\n            className=\"w-5 h-5 text-green-600 cursor-pointer mt-2\"\n            onClick={() => moveToPayment(order.orderId)}\n          />\n        ) : (\n          <div className=\"flex gap-2 mt-2\">\n            {[\"cash\", \"upi\", \"credit\"].map((mode) => (\n              <button\n                key={mode}\n                onClick={() => handlePayment(order.orderId, mode)}\n                className=\"text-xs px-2 py-1 bg-black text-white rounded-full\"\n              >\n                {mode.toUpperCase()}\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  const handleOrderInput = (field, value) => {\n    setNewOrder((prev) => ({ ...prev, [field]: value }));\n  };\n\n  const handleAddNewOrder = () => {\n    if (!newOrder.customerName) {\n      newOrder.customerName = \"Custom\";\n      \n      return;\n    }\n    \n    const items = parsedItems.length > 0 ? parsedItems : [\n      { id: Date.now(), item: \"Sample Product\", brand: \"Brand X\", quantity: 1, rate: 100 }\n    ];\n    \n    const orderWithItems = {\n      ...newOrder,\n      items: items\n    };\n    \n    setUpcomingOrders((prev) => [...prev, orderWithItems]);\n    setShowOrderModal(false);\n    setNewOrder({ customerName: '', orderId: '', items: [] });\n    setParsedItems([]);\n    setTranscript('');\n  };\n\n  const getDynamicBackgroundColor = (orderCount) => {\n    if (orderCount === 0) return \"bg-gray-200\"; // No orders\n    if (orderCount <= 3) return \"bg-blue-200\"; // Few orders\n    if (orderCount <= 6) return \"bg-blue-400\"; // Moderate orders\n    return \"bg-blue-600\"; // Many orders\n  };\n\n  const getDynamicHeight = (orderCount) => {\n    if (orderCount === 0) return \"h-32\"; // Small height for no orders\n    if (orderCount <= 3) return \"h-48\"; // Medium height for a few orders\n    if (orderCount <= 6) return \"h-64\"; // Larger height for moderate orders\n    return \"h-auto\"; // Auto height for many orders\n  };\n\n  const getDynamicWidth = (orderCount) => {\n    if (orderCount === 0) return \"w-1/3\"; // Small width for no orders\n    if (orderCount <= 3) return \"w-1/2\"; // Medium width for a few orders\n    if (orderCount <= 6) return \"w-2/3\"; // Larger width for moderate orders\n    return \"w-full\"; // Full width for many orders\n  };\n\n  return (\n    <div className=\"p-6 space-y-8 bg-white min-h-screen\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-3xl font-bold\">Shop Dashboard</h1>\n        {/* Grouping Create Order and Reports Buttons */}\n        <div className=\"flex gap-4\">\n          {/* Create Order Button */}\n<button\n  onClick={() => setShowOrderModal(true)}\n  className=\"flex items-center bg-black text-white px-4 py-2 rounded-full hover:bg-gray-800\"\n>\n  <PlusCircle className=\"mr-2 w-4 h-4\" /> Create Order\n</button>\n\n{/* Modal for Creating Orders */}\n{showOrderModal && (\n  <div className=\"fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex justify-center items-center z-50\">\n    <div className=\"bg-white p-6 rounded-lg shadow-lg w-full max-w-md relative\">\n      <button\n        className=\"absolute top-2 right-2 text-gray-600 hover:text-black\"\n        onClick={() => setShowOrderModal(false)}\n      >\n        <X className=\"w-5 h-5\" />\n      </button>\n      <h2 className=\"text-lg font-semibold mb-4\">Take Order</h2>\n      <div className=\"space-y-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Customer Name\"\n          className=\"w-full px-3 py-2 border rounded\"\n          value={newOrder.customerName}\n          onChange={(e) => handleOrderInput(\"customerName\", e.target.value)}\n        />\n        <div className=\"flex items-center\">\n          <input\n            type=\"text\"\n            placeholder=\"Order ID (Auto-generated)\"\n            className=\"w-full px-3 py-2 border rounded bg-gray-100\"\n            value={newOrder.orderId}\n            readOnly\n          />\n        </div>\n        <div className=\"relative\">\n          <textarea\n            placeholder=\"Enter order details or use voice input...\"\n            className=\"w-full px-3 py-2 border rounded h-32\"\n            value={transcript}\n            onChange={(e) => setTranscript(e.target.value)}\n          ></textarea>\n          <div className=\"flex justify-between mt-2\">\n            {isListening ? (\n              <button\n                onClick={stopListening}\n                className=\"flex items-center bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\"\n              >\n                <MicOff className=\"mr-1 w-4 h-4\" /> Stop Listening\n              </button>\n            ) : (\n              <button\n                onClick={startListening}\n                className=\"flex items-center bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600\"\n              >\n                <Mic className=\"mr-1 w-4 h-4\" /> Start Listening\n              </button>\n            )}\n            <button\n              onClick={() => {\n                try {\n                  const parsed = parseMultipleOrders(transcript);\n                  console.log(\"Parsed items:\", parsed);\n                  const mappedItems = parsed.map((parsedItem) => {\n                    const matchingProduct = productDatabase.find(\n                      (product) =>\n                        product.item\n                          .toLowerCase()\n                          .includes(parsedItem.item.toLowerCase()) ||\n                        parsedItem.item\n                          .toLowerCase()\n                          .includes(product.item.toLowerCase())\n                    );\n                    return {\n                      id: Date.now() + Math.floor(Math.random() * 1000),\n                      item: matchingProduct ? matchingProduct.item : parsedItem.item,\n                      brand: matchingProduct ? matchingProduct.brand : \"Unknown\",\n                      quantity: parsedItem.quantity || 1,\n                      rate: matchingProduct ? matchingProduct.rate : 100,\n                      unit: parsedItem.unit || \"piece\",\n                    };\n                  });\n                  setParsedItems(mappedItems);\n                } catch (error) {\n                  console.error(\"Error parsing order:\", error);\n                  alert(\"Could not parse the order. Please try again or enter manually.\");\n                }\n              }}\n              className=\"bg-gray-200 text-gray-800 px-3 py-1 rounded hover:bg-gray-300\"\n            >\n              Parse Order\n            </button>\n          </div>\n        </div>\n        {parsedItems.length > 0 && (\n          <div className=\"border p-3 rounded bg-gray-50\">\n            <h3 className=\"text-sm font-semibold mb-2\">Parsed Items:</h3>\n            <ul className=\"text-sm\">\n              {parsedItems.map((item, index) => (\n                <li key={index} className=\"flex justify-between mb-1\">\n                  <span>\n                    {item.quantity} {item.unit}x {item.item} ({item.brand})\n                  </span>\n                  <span>₹{item.rate * item.quantity}</span>\n                </li>\n              ))}\n            </ul>\n            <div className=\"mt-2 text-right text-sm font-semibold\">\n              Total: ₹{calculateTotal(parsedItems)}\n            </div>\n          </div>\n        )}\n        <button\n          onClick={handleAddNewOrder}\n          className=\"w-full bg-black text-white py-2 rounded hover:bg-gray-800\"\n        >\n          Add Order\n        </button>\n      </div>\n    </div>\n  </div>\n)}\n\n          <button\n            onClick={() => setShowReports(!showReports)}\n            className=\"flex items-center bg-black text-white px-4 py-2 rounded-full hover:bg-gray-800\"\n          >\n            <FileText className=\"mr-2 w-4 h-4\" /> Reports\n          </button>\n        </div>\n      </div>\n\n      {/* Flex container for Upcoming Orders and Payment Section */}\n      <div className=\"flex flex-col lg:flex-row gap-6 pb-24\">\n        {/* Upcoming Orders Section */}\n        <section\n          className={`bg-blue-800 p-4 rounded-lg shadow-md transition-all duration-300 ${getDynamicHeight(\n            upcomingOrders.length\n          )} ${getDynamicWidth(upcomingOrders.length)} flex-1`}\n        >\n          <h2 className=\"text-xl font-semibold text-white mb-2\">Upcoming Orders</h2>\n          <div className=\"grid grid-cols-3 gap-4 pb-2\">\n            <button\n              onClick={() => setSortMode(sortMode === \"asc\" ? \"desc\" : \"asc\")}\n              className=\"flex items-center bg-gray-200 px-3 py-1 text-sm rounded hover:bg-gray-300\"\n            >\n              Sort by Total{\" \"}\n              {sortMode === \"asc\" ? (\n                <ArrowUp className=\"w-4 h-4 ml-1\" />\n              ) : (\n                <ArrowDown className=\"w-4 h-4 ml-1\" />\n              )}\n            </button>\n          </div>\n          <div\n            className=\"grid grid-cols-3 gap-4 pb-2 overflow-y-auto\"\n            style={{ maxHeight: \"400px\" }} // Adjust height to fit 6 cards (2 rows)\n          >\n            {upcomingOrders.length === 0 ? (\n              <p className=\"text-gray-300\">No upcoming orders.</p>\n            ) : (\n              sortedUpcomingOrders.map((order) => renderOrderCard(order))\n            )}\n          </div>\n        </section>\n\n        {/* Payment Section */}\n        <section\n          className={`bg-blue-800 p-4 rounded-lg shadow-md transition-all duration-300 ${getDynamicHeight(\n            paymentOrders.length\n          )} ${getDynamicWidth(paymentOrders.length)} flex-1`}\n        >\n          <h2 className=\"text-xl font-semibold text-white mb-2\">Payment Section</h2>\n          <div\n            className=\"grid grid-cols-3 gap-4 pb-2 overflow-y-auto\"\n            style={{ maxHeight: \"400px\" }} // Adjust height to fit 6 cards (2 rows)\n          >\n            {paymentOrders.length === 0 ? (\n              <p className=\"text-gray-300\">No orders in payment section.</p>\n            ) : (\n              paymentOrders.map((order) => renderOrderCard(order, true))\n            )}\n          </div>\n        </section>\n      </div>\n\n      {/* Spacer Div to Push Transaction History Further Down */}\n      <div style={{ height: \"100px\" }}></div> {/* Spacer div with fixed height */}\n\n      {/* Transaction History Section */}\n      <section\n        className=\"bg-blue-800 p-4 rounded-lg shadow-md transition-all duration-300 flex-1\"\n      >\n        <h2 className=\"text-xl font-semibold text-white mb-2\">Transaction History</h2>\n        <div\n          className=\"grid grid-cols-6 gap-4 overflow-x-auto\"\n          style={{ maxHeight: \"150px\" }} // Adjust height for 1 row\n        >\n          {completedOrders.length === 0 ? (\n            <p className=\"text-gray-300 col-span-6\">No transactions available.</p>\n          ) : (\n            completedOrders\n              .slice(-6) // Show only the 6 most recent transactions\n              .map((order) => (\n                <div\n                  key={order.orderId}\n                  className=\"bg-white rounded-lg shadow-md p-4 flex flex-col justify-between\"\n                >\n                  <h3 className=\"text-sm font-bold text-gray-800\">\n                    {order.customerName || \"Custom\"}\n                  </h3>\n                  <p className=\"text-xs text-gray-500\">Order ID: {order.orderId}</p>\n                  <p className=\"text-sm font-semibold text-gray-700\">\n                    Total: ₹{calculateTotal(order.items)}\n                  </p>\n                  <p className=\"text-xs text-gray-500\">\n                    {order.date} at {order.time}\n                  </p>\n                  <p className=\"text-xs text-gray-500\">Mode: {order.mode}</p>\n                </div>\n              ))\n          )}\n        </div>\n      </section>\n\n      {/* Reports Section */}\n      {showReports && (\n        <div className=\"mt-4 border p-4 rounded-xl bg-gray-100\">\n          <h3 className=\"text-lg font-semibold mb-2\">Business Summary</h3>\n          <p>Total Revenue Today: ₹{calculateRevenue()}</p>\n          <p>Profit Today: ₹{calculateProfit()}</p>\n          <p>Monthly Revenue: ₹{calculateRevenue()}</p>\n          <p>Monthly Profit: ₹{calculateProfit()}</p>\n          <div className=\"mt-4\">\n            <h4 className=\"font-semibold mb-2\">Completed Orders</h4>\n            {completedOrders.length === 0 ? (\n              <p className=\"text-gray-500\">No completed orders.</p>\n            ) : (\n              <ul className=\"text-sm text-gray-700 space-y-2\">\n                {completedOrders.map((order) => (\n                  <li key={order.orderId}>\n                    <strong>{order.customerName || \"Custom\"}</strong> - #{order.orderId} - ₹\n                    {calculateTotal(order.items)} - {order.mode.toUpperCase()} on {order.date} at {order.time}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Shop;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}