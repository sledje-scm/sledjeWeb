{"ast":null,"code":"var _jsxFileName = \"/home/someone_practicing/prac/sledjeWeb/frontend/src/pages/Shop.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Trash, Check, FileText, ArrowDown, ArrowUp, PlusCircle, X, Mic, MicOff } from \"lucide-react\";\n\n// Product database - we'll expand this to match the Python inventory structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst productDatabase = [{\n  id: \"p001\",\n  name: \"Product A\",\n  brand: \"Brand X\",\n  category: \"Category 1\",\n  variants: [\"Standard\", \"Premium\", \"Light\"],\n  keywords: [\"product a\", \"a\", \"product\"],\n  default_unit: \"item\",\n  rate: 100\n}, {\n  id: \"p002\",\n  name: \"Product B\",\n  brand: \"Brand Y\",\n  category: \"Category 2\",\n  variants: [\"Standard\", \"Premium\"],\n  keywords: [\"product b\", \"b\"],\n  default_unit: \"packet\",\n  rate: 150\n}, {\n  id: \"p003\",\n  name: \"Product C\",\n  brand: \"Brand Z\",\n  category: \"Category 1\",\n  variants: [\"Standard\", \"Special\"],\n  keywords: [\"product c\", \"c\"],\n  default_unit: \"box\",\n  rate: 80\n}, {\n  id: \"p004\",\n  name: \"Product D\",\n  brand: \"Brand X\",\n  category: \"Category 3\",\n  variants: [\"Regular\", \"Premium\"],\n  keywords: [\"product d\", \"d\"],\n  default_unit: \"bottle\",\n  rate: 90\n}, {\n  id: \"p005\",\n  name: \"Product E\",\n  brand: \"Brand X\",\n  category: \"Category 2\",\n  variants: [\"Original\"],\n  keywords: [\"product e\", \"e\"],\n  default_unit: \"item\",\n  rate: 120\n}, {\n  id: \"p006\",\n  name: \"Product F\",\n  brand: \"Brand Y\",\n  category: \"Category 3\",\n  variants: [\"Standard\"],\n  keywords: [\"product f\", \"f\"],\n  default_unit: \"packet\",\n  rate: 70\n}, {\n  id: \"p007\",\n  name: \"Product G\",\n  brand: \"Brand Z\",\n  category: \"Category 1\",\n  variants: [\"Regular\", \"Light\"],\n  keywords: [\"product g\", \"g\"],\n  default_unit: \"box\",\n  rate: 60\n}, {\n  id: \"p008\",\n  name: \"Product H\",\n  brand: \"Brand X\",\n  category: \"Category 2\",\n  variants: [\"Premium\"],\n  keywords: [\"product h\", \"h\"],\n  default_unit: \"bottle\",\n  rate: 200\n}];\n\n// Sample initial orders\nconst dummyOrders = [{\n  customerName: \"Person A\",\n  orderId: \"ORD123\",\n  items: [{\n    id: 1,\n    item: \"Product A\",\n    brand: \"Brand X\",\n    quantity: 2,\n    rate: 100\n  }, {\n    id: 2,\n    item: \"Product B\",\n    brand: \"Brand Y\",\n    quantity: 1,\n    rate: 150\n  }, {\n    id: 3,\n    item: \"Product C\",\n    brand: \"Brand Z\",\n    quantity: 3,\n    rate: 80\n  }]\n}, {\n  customerName: \"Person B\",\n  orderId: \"ORD456\",\n  items: [{\n    id: 5,\n    item: \"Product E\",\n    brand: \"Brand X\",\n    quantity: 1,\n    rate: 120\n  }, {\n    id: 6,\n    item: \"Product F\",\n    brand: \"Brand Y\",\n    quantity: 2,\n    rate: 70\n  }]\n}];\n\n// Port the Python OrderParser class to JavaScript\nclass OrderParser {\n  constructor() {\n    this.inventory = productDatabase;\n\n    // Prepare keywords for faster lookup\n    this.inventoryKeywords = [];\n    this.prepareInventoryKeywords();\n\n    // Common units for measurement (ported from Python)\n    this.units = {\n      // Weight units\n      \"kg\": {\n        type: \"weight\",\n        standard: \"kg\"\n      },\n      \"kgs\": {\n        type: \"weight\",\n        standard: \"kg\"\n      },\n      \"kilo\": {\n        type: \"weight\",\n        standard: \"kg\"\n      },\n      \"kilos\": {\n        type: \"weight\",\n        standard: \"kg\"\n      },\n      \"kilogram\": {\n        type: \"weight\",\n        standard: \"kg\"\n      },\n      \"kilograms\": {\n        type: \"weight\",\n        standard: \"kg\"\n      },\n      \"g\": {\n        type: \"weight\",\n        standard: \"g\"\n      },\n      \"gram\": {\n        type: \"weight\",\n        standard: \"g\"\n      },\n      \"grams\": {\n        type: \"weight\",\n        standard: \"g\"\n      },\n      // Volume units\n      \"l\": {\n        type: \"volume\",\n        standard: \"L\"\n      },\n      \"liter\": {\n        type: \"volume\",\n        standard: \"L\"\n      },\n      \"litre\": {\n        type: \"volume\",\n        standard: \"L\"\n      },\n      \"liters\": {\n        type: \"volume\",\n        standard: \"L\"\n      },\n      \"litres\": {\n        type: \"volume\",\n        standard: \"L\"\n      },\n      \"ml\": {\n        type: \"volume\",\n        standard: \"ml\"\n      },\n      \"milliliter\": {\n        type: \"volume\",\n        standard: \"ml\"\n      },\n      \"millilitre\": {\n        type: \"volume\",\n        standard: \"ml\"\n      },\n      // Package units\n      \"packet\": {\n        type: \"package\",\n        standard: \"packet\"\n      },\n      \"packets\": {\n        type: \"package\",\n        standard: \"packet\"\n      },\n      \"pack\": {\n        type: \"package\",\n        standard: \"packet\"\n      },\n      \"packs\": {\n        type: \"package\",\n        standard: \"packet\"\n      },\n      \"box\": {\n        type: \"package\",\n        standard: \"box\"\n      },\n      \"boxes\": {\n        type: \"package\",\n        standard: \"box\"\n      },\n      \"bottle\": {\n        type: \"package\",\n        standard: \"bottle\"\n      },\n      \"bottles\": {\n        type: \"package\",\n        standard: \"bottle\"\n      },\n      \"item\": {\n        type: \"package\",\n        standard: \"item\"\n      },\n      \"items\": {\n        type: \"package\",\n        standard: \"item\"\n      }\n    };\n  }\n  prepareInventoryKeywords() {\n    // Create keyword mappings similar to Python implementation\n    this.inventory.forEach(product => {\n      const keywords = new Set([...product.keywords, product.name.toLowerCase(), product.brand.toLowerCase()]);\n\n      // Add variants\n      product.variants.forEach(variant => {\n        keywords.add(variant.toLowerCase());\n        // Add combined forms like \"Brand + Variant\" or \"Name + Variant\"\n        keywords.add(`${product.brand.toLowerCase()} ${variant.toLowerCase()}`);\n        keywords.add(`${product.name.toLowerCase()} ${variant.toLowerCase()}`);\n      });\n      keywords.forEach(keyword => {\n        if (keyword && keyword.length > 2) {\n          // Ignore very short keywords\n          this.inventoryKeywords.push({\n            keyword,\n            productId: product.id\n          });\n        }\n      });\n    });\n  }\n\n  // Fuzzy matching equivalent in JavaScript\n  fuzzyMatchProduct(itemText, threshold = 0.6) {\n    if (!this.inventory || this.inventory.length === 0) {\n      return {\n        name: itemText\n      }, 0.3;\n    }\n    itemText = itemText.toLowerCase().trim();\n\n    // Try direct keyword matches first\n    for (const {\n      keyword,\n      productId\n    } of this.inventoryKeywords) {\n      if (keyword === itemText) {\n        const product = this.inventory.find(p => p.id === productId);\n        return [product, 1.0]; // Exact match\n      } else if (keyword.includes(itemText) || itemText.includes(keyword)) {\n        const product = this.inventory.find(p => p.id === productId);\n        return [product, 0.8]; // Partial match\n      }\n    }\n\n    // Try fuzzy matching if no direct match found\n    // Since JavaScript doesn't have a built-in equivalent to get_close_matches,\n    // we'll implement a simple similarity check\n    let bestMatch = null;\n    let highestSimilarity = threshold;\n    for (const {\n      keyword,\n      productId\n    } of this.inventoryKeywords) {\n      const similarity = this.calculateSimilarity(keyword, itemText);\n      if (similarity > highestSimilarity) {\n        highestSimilarity = similarity;\n        bestMatch = {\n          keyword,\n          productId\n        };\n      }\n    }\n    if (bestMatch) {\n      const product = this.inventory.find(p => p.id === bestMatch.productId);\n      return [product, highestSimilarity];\n    }\n\n    // If no match, return generic item\n    return [{\n      name: itemText\n    }, 0.3];\n  }\n\n  // Simple similarity calculation based on common characters\n  calculateSimilarity(str1, str2) {\n    if (!str1 || !str2) return 0;\n    const s1 = str1.toLowerCase();\n    const s2 = str2.toLowerCase();\n\n    // Use Levenshtein distance as a base for similarity\n    const distance = this.levenshteinDistance(s1, s2);\n    const maxLength = Math.max(s1.length, s2.length);\n    return 1 - distance / maxLength;\n  }\n\n  // Levenshtein distance implementation\n  levenshteinDistance(s1, s2) {\n    const m = s1.length;\n    const n = s2.length;\n\n    // Create the distance matrix\n    const dp = Array(m + 1).fill().map(() => Array(n + 1).fill(0));\n    for (let i = 0; i <= m; i++) dp[i][0] = i;\n    for (let j = 0; j <= n; j++) dp[0][j] = j;\n    for (let i = 1; i <= m; i++) {\n      for (let j = 1; j <= n; j++) {\n        if (s1[i - 1] === s2[j - 1]) {\n          dp[i][j] = dp[i - 1][j - 1];\n        } else {\n          dp[i][j] = 1 + Math.min(dp[i - 1][j],\n          // deletion\n          dp[i][j - 1],\n          // insertion\n          dp[i - 1][j - 1] // substitution\n          );\n        }\n      }\n    }\n    return dp[m][n];\n  }\n  extractUnitAndItem(itemText) {\n    const words = itemText.split(/\\s+/);\n    let unitInfo = null;\n\n    // Look for unit patterns like \"kg of rice\" or \"bottles of water\"\n    for (let i = 0; i < words.length; i++) {\n      const word = words[i].toLowerCase();\n      if (this.units[word]) {\n        const unitType = this.units[word].type;\n        const unitStandard = this.units[word].standard;\n\n        // Handle \"of\" pattern (e.g., \"kg of rice\")\n        if (i + 1 < words.length && words[i + 1].toLowerCase() === \"of\") {\n          const remainingWords = words.slice(i + 2).join(\" \");\n          unitInfo = {\n            unit: unitStandard,\n            unit_type: unitType\n          };\n          return [remainingWords, unitInfo];\n        }\n\n        // Handle unit without \"of\" (e.g., \"2 kg rice\")\n        if (i > 0 && i + 1 < words.length && !isNaN(words[i - 1])) {\n          const remainingWords = [...words.slice(0, i), ...words.slice(i + 1)].join(\" \");\n          unitInfo = {\n            unit: unitStandard,\n            unit_type: unitType\n          };\n          return [remainingWords, unitInfo];\n        }\n      }\n    }\n\n    // Check for \"of\" patterns without specific unit (e.g., \"packets of maggi\")\n    const ofPattern = /^([\\w\\s]+)\\s+of\\s+([\\w\\s]+)$/i;\n    const match = itemText.match(ofPattern);\n    if (match) {\n      const unitDesc = match[1].trim();\n      const itemDesc = match[2].trim();\n\n      // See if the first part is a recognized unit\n      const unitWords = unitDesc.split(/\\s+/);\n      for (const unitWord of unitWords) {\n        if (this.units[unitWord.toLowerCase()]) {\n          const unitStandard = this.units[unitWord.toLowerCase()].standard;\n          const unitType = this.units[unitWord.toLowerCase()].unit_type;\n          unitInfo = {\n            unit: unitStandard,\n            unit_type: unitType\n          };\n          return [itemDesc, unitInfo];\n        }\n      }\n    }\n\n    // No unit found or special pattern detected\n    return [itemText, unitInfo];\n  }\n  parseOrder(text, matchThreshold = 0.6) {\n    // Remove common prefixes like \"I want\" or \"I need\"\n    const cleanedText = text.toLowerCase().trim().replace(/^(i want|i need|get me|give me|can i have|i would like)\\s+/, '');\n\n    // Pattern to match quantity followed by item\n    // This handles formats like \"2 packets of product a\" or \"3 product b\"\n    const pattern = /(\\d+(?:\\.\\d+)?)\\s+([\\w\\s\\-\\.]+?)(?=\\s+\\d+(?:\\.\\d+)?\\s+|$)/g;\n    let match;\n    const matches = [];\n    while ((match = pattern.exec(cleanedText)) !== null) {\n      matches.push([match[1], match[2].trim()]);\n    }\n    const orderItems = [];\n    const uncertainItems = [];\n    for (const [quantityStr, itemText] of matches) {\n      // Parse quantity (handle both integer and decimal values)\n      let quantity;\n      try {\n        quantity = quantityStr.includes('.') ? parseFloat(quantityStr) : parseInt(quantityStr);\n      } catch (e) {\n        quantity = 0; // Default fallback\n      }\n\n      // Extract unit information if present\n      const [itemName, unitInfo] = this.extractUnitAndItem(itemText);\n\n      // Match against inventory using fuzzy matching\n      const [product, confidence] = this.fuzzyMatchProduct(itemName, matchThreshold);\n\n      // Create the order item\n      const orderItem = {\n        quantity: quantity,\n        item: product.name || itemName,\n        confidence: confidence\n      };\n\n      // Add product information if available\n      if (product.id) {\n        orderItem.product_id = product.id;\n        orderItem.brand = product.brand || '';\n        orderItem.category = product.category || '';\n        orderItem.rate = product.rate || 0;\n\n        // Use product default unit if one is specified and no unit was found in text\n        if (!unitInfo && product.default_unit) {\n          unitInfo = {\n            unit: product.default_unit,\n            unit_type: \"package\" // Assume package for default units\n          };\n        }\n      }\n\n      // Add unit information if available\n      if (unitInfo) {\n        orderItem.unit = unitInfo.unit;\n        orderItem.unit_type = unitInfo.unit_type;\n      }\n\n      // Flag uncertain items\n      if (confidence < matchThreshold) {\n        orderItem.uncertain = true;\n        uncertainItems.push(orderItem);\n      } else {\n        orderItem.uncertain = false;\n      }\n\n      // Add unique ID for the item\n      orderItem.id = Date.now() + orderItems.length;\n      orderItems.push(orderItem);\n    }\n\n    // Error handling - if no items were found\n    if (orderItems.length === 0) {\n      return [[], \"No items could be parsed from the input\"];\n    }\n\n    // Error handling - if uncertain items were found\n    if (uncertainItems.length > 0) {\n      return [orderItems, `Found ${uncertainItems.length} item(s) with low confidence`];\n    }\n    return [orderItems, null]; // No errors\n  }\n}\nconst Shop = () => {\n  _s();\n  const [upcomingOrders, setUpcomingOrders] = useState(dummyOrders);\n  const [paymentOrders, setPaymentOrders] = useState([]);\n  const [expandedCards, setExpandedCards] = useState({});\n  const [showReports, setShowReports] = useState(false);\n  const [completedOrders, setCompletedOrders] = useState([]);\n  const [showOrderModal, setShowOrderModal] = useState(false);\n  const [newOrder, setNewOrder] = useState({\n    customerName: '',\n    orderId: '',\n    items: []\n  });\n  const [sortMode, setSortMode] = useState(\"none\");\n\n  // States for voice input\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [parsedItems, setParsedItems] = useState([]);\n  const [parsingError, setParsingError] = useState(null);\n  const recognitionRef = useRef(null);\n  const orderParserRef = useRef(null);\n\n  // Initialize order parser\n  useEffect(() => {\n    // Create the order parser once\n    if (!orderParserRef.current) {\n      orderParserRef.current = new OrderParser();\n    }\n  }, []);\n\n  // Generate a unique order ID\n  const generateOrderId = () => {\n    const timestamp = new Date().getTime();\n    const randomNum = Math.floor(Math.random() * 1000);\n    return `ORD${timestamp.toString().slice(-4)}${randomNum}`;\n  };\n\n  // Initialize recognition\n  useEffect(() => {\n    if (typeof window !== 'undefined' && 'webkitSpeechRecognition' in window) {\n      const SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\n      recognitionRef.current = new SpeechRecognition();\n      recognitionRef.current.continuous = true;\n      recognitionRef.current.interimResults = true;\n      recognitionRef.current.onresult = event => {\n        let interimTranscript = '';\n        for (let i = event.resultIndex; i < event.results.length; i++) {\n          const transcript = event.results[i][0].transcript;\n          if (event.results[i].isFinal) {\n            setTranscript(prev => prev + ' ' + transcript);\n          } else {\n            interimTranscript += transcript;\n          }\n        }\n      };\n      recognitionRef.current.onerror = event => {\n        console.error('Speech recognition error', event.error);\n        setIsListening(false);\n      };\n    }\n\n    // Set default order ID when modal opens\n    if (showOrderModal) {\n      setNewOrder(prev => ({\n        ...prev,\n        orderId: generateOrderId()\n      }));\n    }\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n    };\n  }, [showOrderModal]);\n  const startListening = () => {\n    setTranscript('');\n    if (recognitionRef.current) {\n      recognitionRef.current.start();\n      setIsListening(true);\n    } else {\n      alert('Speech recognition is not supported in this browser.');\n    }\n  };\n  const stopListening = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    }\n  };\n  const parseOrderText = () => {\n    if (!transcript.trim()) {\n      alert(\"Please enter or speak your order first\");\n      return;\n    }\n\n    // Use our OrderParser instead of the simple regex\n    const [items, error] = orderParserRef.current.parseOrder(transcript);\n    if (items.length === 0) {\n      alert(error || \"No products detected in the order. Please try again.\");\n      setParsingError(error);\n    } else {\n      setParsedItems(items);\n      setParsingError(error); // This could be a warning like \"Found items with low confidence\"\n    }\n  };\n  const toggleExpand = orderId => {\n    setExpandedCards(prev => ({\n      ...prev,\n      [orderId]: !prev[orderId]\n    }));\n  };\n  const moveToPayment = orderId => {\n    const order = upcomingOrders.find(o => o.orderId === orderId);\n    setPaymentOrders(prev => [...prev, order]);\n    setUpcomingOrders(prev => prev.filter(o => o.orderId !== orderId));\n  };\n  const deleteOrderCard = orderId => {\n    if (window.confirm(\"Are you sure to delete this order?\")) {\n      setUpcomingOrders(prev => prev.filter(o => o.orderId !== orderId));\n    }\n  };\n  const deleteItem = (orderId, itemId) => {\n    setUpcomingOrders(prev => prev.map(o => o.orderId === orderId ? {\n      ...o,\n      items: o.items.filter(item => item.id !== itemId)\n    } : o));\n  };\n  const handlePayment = (orderId, mode) => {\n    const now = new Date();\n    const order = paymentOrders.find(o => o.orderId === orderId);\n    const bill = {\n      ...order,\n      mode,\n      date: now.toLocaleDateString(),\n      time: now.toLocaleTimeString()\n    };\n    console.log(\"Generated Bill:\", bill);\n    if (mode === \"credit\") {\n      alert(\"Credit bill generated. Redirect to borrower's page...\");\n    } else {\n      alert(\"Paid bill generated.\");\n    }\n    setPaymentOrders(prev => prev.filter(o => o.orderId !== orderId));\n    setCompletedOrders(prev => [...prev, bill]);\n  };\n  const calculateTotal = items => items.reduce((acc, item) => acc + item.quantity * (item.rate || 0), 0);\n  const calculateRevenue = () => {\n    return completedOrders.reduce((total, order) => {\n      return total + calculateTotal(order.items);\n    }, 0);\n  };\n  const calculateProfit = () => {\n    return calculateRevenue() * 0.2;\n  };\n  const sortedUpcomingOrders = [...upcomingOrders].sort((a, b) => {\n    const totalA = calculateTotal(a.items);\n    const totalB = calculateTotal(b.items);\n    if (sortMode === \"asc\") return totalA - totalB;\n    if (sortMode === \"desc\") return totalB - totalA;\n    return 0;\n  });\n  const renderOrderCard = (order, isPayment = false) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-w-[280px] max-w-xs bg-white rounded-lg shadow-md p-4 mx-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-md font-bold\",\n        children: order.customerName || \"Custom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Trash, {\n        className: \"w-4 h-4 text-red-500 cursor-pointer\",\n        onClick: () => deleteOrderCard(order.orderId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [(expandedCards[order.orderId] ? order.items : order.items.slice(0, 3)).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center text-sm border-b py-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"flex-1\",\n            children: [item.item, \" \", item.brand && `(${item.brand})`, item.unit && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-500 ml-1\",\n              children: [\"[\", item.unit, \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 31\n            }, this), item.uncertain && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-red-500 ml-1\",\n              children: \"\\u26A0\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 15\n          }, this), !isPayment && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            value: item.quantity,\n            onChange: e => {\n              const quantity = parseInt(e.target.value);\n              setUpcomingOrders(prev => prev.map(o => o.orderId === order.orderId ? {\n                ...o,\n                items: o.items.map(i => i.id === item.id ? {\n                  ...i,\n                  quantity\n                } : i)\n              } : o));\n            },\n            className: \"w-12 border rounded px-1 text-xs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 13\n        }, this), !isPayment && /*#__PURE__*/_jsxDEV(Trash, {\n          className: \"w-3 h-3 text-red-400 cursor-pointer\",\n          onClick: () => deleteItem(order.orderId, item.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 11\n      }, this)), order.items.length > 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-xs text-blue-500 mt-1\",\n        onClick: () => toggleExpand(order.orderId),\n        children: expandedCards[order.orderId] ? \"View Less\" : \"View More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 text-sm font-semibold\",\n        children: [\"Total: \\u20B9\", calculateTotal(order.items)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-500\",\n        children: [\"Order ID: \", order.orderId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 9\n      }, this), !isPayment ? /*#__PURE__*/_jsxDEV(Check, {\n        className: \"w-5 h-5 text-green-600 cursor-pointer mt-2\",\n        onClick: () => moveToPayment(order.orderId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2 mt-2\",\n        children: [\"cash\", \"upi\", \"credit\"].map(mode => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePayment(order.orderId, mode),\n          className: \"text-xs px-2 py-1 bg-black text-white rounded-full\",\n          children: mode.toUpperCase()\n        }, mode, false, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 7\n    }, this)]\n  }, order.orderId, true, {\n    fileName: _jsxFileName,\n    lineNumber: 586,\n    columnNumber: 5\n  }, this);\n  const handleOrderInput = (field, value) => {\n    setNewOrder(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleAddNewOrder = () => {\n    if (!newOrder.customerName) {\n      alert(\"Please enter customer name.\");\n      return;\n    }\n    const items = parsedItems.length > 0 ? parsedItems : [{\n      id: Date.now(),\n      item: \"Sample Product\",\n      brand: \"Brand X\",\n      quantity: 1,\n      rate: 100\n    }];\n    const orderWithItems = {\n      ...newOrder,\n      items: items\n    };\n    setUpcomingOrders(prev => [...prev, orderWithItems]);\n    setShowOrderModal(false);\n    setNewOrder({\n      customerName: '',\n      orderId: '',\n      items: []\n    });\n    setParsedItems([]);\n    setTranscript('');\n    setParsingError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 space-y-8 bg-white min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"Shop Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowOrderModal(true),\n        className: \"flex items-center bg-black text-white px-4 py-2 rounded-full hover:bg-gray-800\",\n        children: [/*#__PURE__*/_jsxDEV(PlusCircle, {\n          className: \"mr-2 w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 11\n        }, this), \" Create Order\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 7\n    }, this), showOrderModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex justify-center items-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-lg w-full max-w-md relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"absolute top-2 right-2 text-gray-600 hover:text-black\",\n          onClick: () => setShowOrderModal(false),\n          children: /*#__PURE__*/_jsxDEV(X, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Take Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Customer Name\",\n            className: \"w-full px-3 py-2 border rounded\",\n            value: newOrder.customerName,\n            onChange: e => handleOrderInput(\"customerName\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Order ID (Auto-generated)\",\n              className: \"w-full px-3 py-2 border rounded bg-gray-100\",\n              value: newOrder.orderId,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Enter order details or use voice input...\",\n              className: \"w-full px-3 py-2 border rounded h-32\",\n              value: transcript,\n              onChange: e => setTranscript(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between mt-2\",\n              children: [isListening ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: stopListening,\n                className: \"flex items-center bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\",\n                children: [/*#__PURE__*/_jsxDEV(MicOff, {\n                  className: \"mr-1 w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 748,\n                  columnNumber: 23\n                }, this), \" Stop Listening\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: startListening,\n                className: \"flex items-center bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600\",\n                children: [/*#__PURE__*/_jsxDEV(Mic, {\n                  className: \"mr-1 w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 755,\n                  columnNumber: 23\n                }, this), \" Start Listening\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: parseOrderText,\n                className: \"bg-gray-200 text-gray-800 px-3 py-1 rounded hover:bg-gray-300\",\n                children: \"Parse Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 15\n          }, this), parsedItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border p-3 rounded bg-gray-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-sm font-semibold mb-2\",\n              children: \"Parsed Items:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"text-sm\",\n              children: parsedItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"flex justify-between mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [item.quantity, \"x \", item.item, \" (\", item.brand, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 774,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"\\u20B9\", item.rate * item.quantity]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 775,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 text-right text-sm font-semibold\",\n              children: [\"Total: \\u20B9\", calculateTotal(parsedItems)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddNewOrder,\n            className: \"w-full bg-black text-white py-2 rounded hover:bg-gray-800\",\n            children: \"Add Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Upcoming Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSortMode(sortMode === \"asc\" ? \"desc\" : \"asc\"),\n          className: \"flex items-center bg-gray-200 px-3 py-1 text-sm rounded hover:bg-gray-300\",\n          children: [\"Sort by Total \", sortMode === \"asc\" ? /*#__PURE__*/_jsxDEV(ArrowUp, {\n            className: \"w-4 h-4 ml-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 49\n          }, this) : /*#__PURE__*/_jsxDEV(ArrowDown, {\n            className: \"w-4 h-4 ml-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 88\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex overflow-x-auto pb-2\",\n        children: upcomingOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"No upcoming orders.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: sortedUpcomingOrders.map(order => renderOrderCard(order))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Payment Section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex overflow-x-auto pb-2\",\n        children: paymentOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"No orders in payment section.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: paymentOrders.map(order => renderOrderCard(order, true))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowReports(!showReports),\n        className: \"bg-black text-white px-4 py-2 rounded-full hover:bg-gray-800\",\n        children: [/*#__PURE__*/_jsxDEV(FileText, {\n          className: \"inline-block mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 11\n        }, this), \" Reports\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 9\n      }, this), showReports && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 border p-4 rounded-xl bg-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Business Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Revenue Today: \\u20B9\", calculateRevenue()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Profit Today: \\u20B9\", calculateProfit()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Monthly Revenue: \\u20B9\", calculateRevenue()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Monthly Profit: \\u20B9\", calculateProfit()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-semibold mb-2\",\n            children: \"Completed Orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 15\n          }, this), completedOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: \"No completed orders.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-sm text-gray-700 space-y-2\",\n            children: completedOrders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: order.customerName || \"Custom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 852,\n                columnNumber: 23\n              }, this), \" - #\", order.orderId, \" - \\u20B9\", calculateTotal(order.items), \" - \", order.mode.toUpperCase(), \" on \", order.date, \" at \", order.time]\n            }, order.orderId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 695,\n    columnNumber: 5\n  }, this);\n};\n_s(Shop, \"RVkNqLkHJulL+WmsKcLKFkHHZMw=\");\n_c = Shop;\nexport default Shop;\nvar _c;\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Trash","Check","FileText","ArrowDown","ArrowUp","PlusCircle","X","Mic","MicOff","jsxDEV","_jsxDEV","productDatabase","id","name","brand","category","variants","keywords","default_unit","rate","dummyOrders","customerName","orderId","items","item","quantity","OrderParser","constructor","inventory","inventoryKeywords","prepareInventoryKeywords","units","type","standard","forEach","product","Set","toLowerCase","variant","add","keyword","length","push","productId","fuzzyMatchProduct","itemText","threshold","trim","find","p","includes","bestMatch","highestSimilarity","similarity","calculateSimilarity","str1","str2","s1","s2","distance","levenshteinDistance","maxLength","Math","max","m","n","dp","Array","fill","map","i","j","min","extractUnitAndItem","words","split","unitInfo","word","unitType","unitStandard","remainingWords","slice","join","unit","unit_type","isNaN","ofPattern","match","unitDesc","itemDesc","unitWords","unitWord","parseOrder","text","matchThreshold","cleanedText","replace","pattern","matches","exec","orderItems","uncertainItems","quantityStr","parseFloat","parseInt","e","itemName","confidence","orderItem","product_id","uncertain","Date","now","Shop","_s","upcomingOrders","setUpcomingOrders","paymentOrders","setPaymentOrders","expandedCards","setExpandedCards","showReports","setShowReports","completedOrders","setCompletedOrders","showOrderModal","setShowOrderModal","newOrder","setNewOrder","sortMode","setSortMode","transcript","setTranscript","isListening","setIsListening","parsedItems","setParsedItems","parsingError","setParsingError","recognitionRef","orderParserRef","current","generateOrderId","timestamp","getTime","randomNum","floor","random","toString","window","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","onresult","event","interimTranscript","resultIndex","results","isFinal","prev","onerror","console","error","stop","startListening","start","alert","stopListening","parseOrderText","toggleExpand","moveToPayment","order","o","filter","deleteOrderCard","confirm","deleteItem","itemId","handlePayment","mode","bill","date","toLocaleDateString","time","toLocaleTimeString","log","calculateTotal","reduce","acc","calculateRevenue","total","calculateProfit","sortedUpcomingOrders","sort","a","b","totalA","totalB","renderOrderCard","isPayment","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","target","toUpperCase","handleOrderInput","field","handleAddNewOrder","orderWithItems","placeholder","readOnly","index","_c","$RefreshReg$"],"sources":["/home/someone_practicing/prac/sledjeWeb/frontend/src/pages/Shop.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Trash, Check, FileText, ArrowDown, ArrowUp, PlusCircle, X, Mic, MicOff } from \"lucide-react\";\n\n// Product database - we'll expand this to match the Python inventory structure\nconst productDatabase = [\n  { \n    id: \"p001\",\n    name: \"Product A\", \n    brand: \"Brand X\", \n    category: \"Category 1\",\n    variants: [\"Standard\", \"Premium\", \"Light\"],\n    keywords: [\"product a\", \"a\", \"product\"],\n    default_unit: \"item\",\n    rate: 100 \n  },\n  { \n    id: \"p002\",\n    name: \"Product B\", \n    brand: \"Brand Y\", \n    category: \"Category 2\",\n    variants: [\"Standard\", \"Premium\"],\n    keywords: [\"product b\", \"b\"],\n    default_unit: \"packet\",\n    rate: 150 \n  },\n  { \n    id: \"p003\",\n    name: \"Product C\", \n    brand: \"Brand Z\", \n    category: \"Category 1\",\n    variants: [\"Standard\", \"Special\"],\n    keywords: [\"product c\", \"c\"],\n    default_unit: \"box\",\n    rate: 80 \n  },\n  { \n    id: \"p004\",\n    name: \"Product D\", \n    brand: \"Brand X\", \n    category: \"Category 3\",\n    variants: [\"Regular\", \"Premium\"],\n    keywords: [\"product d\", \"d\"],\n    default_unit: \"bottle\",\n    rate: 90 \n  },\n  { \n    id: \"p005\",\n    name: \"Product E\", \n    brand: \"Brand X\", \n    category: \"Category 2\",\n    variants: [\"Original\"],\n    keywords: [\"product e\", \"e\"],\n    default_unit: \"item\",\n    rate: 120 \n  },\n  { \n    id: \"p006\",\n    name: \"Product F\", \n    brand: \"Brand Y\", \n    category: \"Category 3\",\n    variants: [\"Standard\"],\n    keywords: [\"product f\", \"f\"],\n    default_unit: \"packet\",\n    rate: 70 \n  },\n  { \n    id: \"p007\",\n    name: \"Product G\", \n    brand: \"Brand Z\", \n    category: \"Category 1\",\n    variants: [\"Regular\", \"Light\"],\n    keywords: [\"product g\", \"g\"],\n    default_unit: \"box\",\n    rate: 60 \n  },\n  { \n    id: \"p008\",\n    name: \"Product H\", \n    brand: \"Brand X\", \n    category: \"Category 2\",\n    variants: [\"Premium\"],\n    keywords: [\"product h\", \"h\"],\n    default_unit: \"bottle\",\n    rate: 200 \n  },\n];\n\n// Sample initial orders\nconst dummyOrders = [\n  {\n    customerName: \"Person A\",\n    orderId: \"ORD123\",\n    items: [\n      { id: 1, item: \"Product A\", brand: \"Brand X\", quantity: 2, rate: 100 },\n      { id: 2, item: \"Product B\", brand: \"Brand Y\", quantity: 1, rate: 150 },\n      { id: 3, item: \"Product C\", brand: \"Brand Z\", quantity: 3, rate: 80 },\n    ],\n  },\n  {\n    customerName: \"Person B\",\n    orderId: \"ORD456\",\n    items: [\n      { id: 5, item: \"Product E\", brand: \"Brand X\", quantity: 1, rate: 120 },\n      { id: 6, item: \"Product F\", brand: \"Brand Y\", quantity: 2, rate: 70 },\n    ],\n  },\n];\n\n// Port the Python OrderParser class to JavaScript\nclass OrderParser {\n  constructor() {\n    this.inventory = productDatabase;\n    \n    // Prepare keywords for faster lookup\n    this.inventoryKeywords = [];\n    this.prepareInventoryKeywords();\n    \n    // Common units for measurement (ported from Python)\n    this.units = {\n      // Weight units\n      \"kg\": {type: \"weight\", standard: \"kg\"},\n      \"kgs\": {type: \"weight\", standard: \"kg\"},\n      \"kilo\": {type: \"weight\", standard: \"kg\"},\n      \"kilos\": {type: \"weight\", standard: \"kg\"},\n      \"kilogram\": {type: \"weight\", standard: \"kg\"},\n      \"kilograms\": {type: \"weight\", standard: \"kg\"},\n      \"g\": {type: \"weight\", standard: \"g\"},\n      \"gram\": {type: \"weight\", standard: \"g\"},\n      \"grams\": {type: \"weight\", standard: \"g\"},\n      // Volume units\n      \"l\": {type: \"volume\", standard: \"L\"},\n      \"liter\": {type: \"volume\", standard: \"L\"},\n      \"litre\": {type: \"volume\", standard: \"L\"},\n      \"liters\": {type: \"volume\", standard: \"L\"},\n      \"litres\": {type: \"volume\", standard: \"L\"},\n      \"ml\": {type: \"volume\", standard: \"ml\"},\n      \"milliliter\": {type: \"volume\", standard: \"ml\"},\n      \"millilitre\": {type: \"volume\", standard: \"ml\"},\n      // Package units\n      \"packet\": {type: \"package\", standard: \"packet\"},\n      \"packets\": {type: \"package\", standard: \"packet\"},\n      \"pack\": {type: \"package\", standard: \"packet\"},\n      \"packs\": {type: \"package\", standard: \"packet\"},\n      \"box\": {type: \"package\", standard: \"box\"},\n      \"boxes\": {type: \"package\", standard: \"box\"},\n      \"bottle\": {type: \"package\", standard: \"bottle\"},\n      \"bottles\": {type: \"package\", standard: \"bottle\"},\n      \"item\": {type: \"package\", standard: \"item\"},\n      \"items\": {type: \"package\", standard: \"item\"},\n    };\n  }\n  \n  prepareInventoryKeywords() {\n    // Create keyword mappings similar to Python implementation\n    this.inventory.forEach(product => {\n      const keywords = new Set([\n        ...product.keywords,\n        product.name.toLowerCase(),\n        product.brand.toLowerCase()\n      ]);\n      \n      // Add variants\n      product.variants.forEach(variant => {\n        keywords.add(variant.toLowerCase());\n        // Add combined forms like \"Brand + Variant\" or \"Name + Variant\"\n        keywords.add(`${product.brand.toLowerCase()} ${variant.toLowerCase()}`);\n        keywords.add(`${product.name.toLowerCase()} ${variant.toLowerCase()}`);\n      });\n      \n      keywords.forEach(keyword => {\n        if (keyword && keyword.length > 2) { // Ignore very short keywords\n          this.inventoryKeywords.push({keyword, productId: product.id});\n        }\n      });\n    });\n  }\n  \n  // Fuzzy matching equivalent in JavaScript\n  fuzzyMatchProduct(itemText, threshold = 0.6) {\n    if (!this.inventory || this.inventory.length === 0) {\n      return {name: itemText}, 0.3;\n    }\n    \n    itemText = itemText.toLowerCase().trim();\n    \n    // Try direct keyword matches first\n    for (const {keyword, productId} of this.inventoryKeywords) {\n      if (keyword === itemText) {\n        const product = this.inventory.find(p => p.id === productId);\n        return [product, 1.0]; // Exact match\n      } else if (keyword.includes(itemText) || itemText.includes(keyword)) {\n        const product = this.inventory.find(p => p.id === productId);\n        return [product, 0.8]; // Partial match\n      }\n    }\n    \n    // Try fuzzy matching if no direct match found\n    // Since JavaScript doesn't have a built-in equivalent to get_close_matches,\n    // we'll implement a simple similarity check\n    let bestMatch = null;\n    let highestSimilarity = threshold;\n    \n    for (const {keyword, productId} of this.inventoryKeywords) {\n      const similarity = this.calculateSimilarity(keyword, itemText);\n      if (similarity > highestSimilarity) {\n        highestSimilarity = similarity;\n        bestMatch = {keyword, productId};\n      }\n    }\n    \n    if (bestMatch) {\n      const product = this.inventory.find(p => p.id === bestMatch.productId);\n      return [product, highestSimilarity];\n    }\n    \n    // If no match, return generic item\n    return [{name: itemText}, 0.3];\n  }\n  \n  // Simple similarity calculation based on common characters\n  calculateSimilarity(str1, str2) {\n    if (!str1 || !str2) return 0;\n    \n    const s1 = str1.toLowerCase();\n    const s2 = str2.toLowerCase();\n    \n    // Use Levenshtein distance as a base for similarity\n    const distance = this.levenshteinDistance(s1, s2);\n    const maxLength = Math.max(s1.length, s2.length);\n    \n    return 1 - (distance / maxLength);\n  }\n  \n  // Levenshtein distance implementation\n  levenshteinDistance(s1, s2) {\n    const m = s1.length;\n    const n = s2.length;\n    \n    // Create the distance matrix\n    const dp = Array(m + 1).fill().map(() => Array(n + 1).fill(0));\n    \n    for (let i = 0; i <= m; i++) dp[i][0] = i;\n    for (let j = 0; j <= n; j++) dp[0][j] = j;\n    \n    for (let i = 1; i <= m; i++) {\n      for (let j = 1; j <= n; j++) {\n        if (s1[i-1] === s2[j-1]) {\n          dp[i][j] = dp[i-1][j-1];\n        } else {\n          dp[i][j] = 1 + Math.min(\n            dp[i-1][j],     // deletion\n            dp[i][j-1],     // insertion\n            dp[i-1][j-1]    // substitution\n          );\n        }\n      }\n    }\n    \n    return dp[m][n];\n  }\n  \n  extractUnitAndItem(itemText) {\n    const words = itemText.split(/\\s+/);\n    let unitInfo = null;\n    \n    // Look for unit patterns like \"kg of rice\" or \"bottles of water\"\n    for (let i = 0; i < words.length; i++) {\n      const word = words[i].toLowerCase();\n      if (this.units[word]) {\n        const unitType = this.units[word].type;\n        const unitStandard = this.units[word].standard;\n        \n        // Handle \"of\" pattern (e.g., \"kg of rice\")\n        if (i + 1 < words.length && words[i + 1].toLowerCase() === \"of\") {\n          const remainingWords = words.slice(i + 2).join(\" \");\n          unitInfo = {\n            unit: unitStandard,\n            unit_type: unitType\n          };\n          return [remainingWords, unitInfo];\n        }\n        \n        // Handle unit without \"of\" (e.g., \"2 kg rice\")\n        if (i > 0 && i + 1 < words.length && !isNaN(words[i - 1])) {\n          const remainingWords = [...words.slice(0, i), ...words.slice(i + 1)].join(\" \");\n          unitInfo = {\n            unit: unitStandard,\n            unit_type: unitType\n          };\n          return [remainingWords, unitInfo];\n        }\n      }\n    }\n    \n    // Check for \"of\" patterns without specific unit (e.g., \"packets of maggi\")\n    const ofPattern = /^([\\w\\s]+)\\s+of\\s+([\\w\\s]+)$/i;\n    const match = itemText.match(ofPattern);\n    if (match) {\n      const unitDesc = match[1].trim();\n      const itemDesc = match[2].trim();\n      \n      // See if the first part is a recognized unit\n      const unitWords = unitDesc.split(/\\s+/);\n      for (const unitWord of unitWords) {\n        if (this.units[unitWord.toLowerCase()]) {\n          const unitStandard = this.units[unitWord.toLowerCase()].standard;\n          const unitType = this.units[unitWord.toLowerCase()].unit_type;\n          unitInfo = {\n            unit: unitStandard,\n            unit_type: unitType\n          };\n          return [itemDesc, unitInfo];\n        }\n      }\n    }\n    \n    // No unit found or special pattern detected\n    return [itemText, unitInfo];\n  }\n  \n  parseOrder(text, matchThreshold = 0.6) {\n    // Remove common prefixes like \"I want\" or \"I need\"\n    const cleanedText = text.toLowerCase().trim()\n      .replace(/^(i want|i need|get me|give me|can i have|i would like)\\s+/, '');\n    \n    // Pattern to match quantity followed by item\n    // This handles formats like \"2 packets of product a\" or \"3 product b\"\n    const pattern = /(\\d+(?:\\.\\d+)?)\\s+([\\w\\s\\-\\.]+?)(?=\\s+\\d+(?:\\.\\d+)?\\s+|$)/g;\n    \n    let match;\n    const matches = [];\n    while ((match = pattern.exec(cleanedText)) !== null) {\n      matches.push([match[1], match[2].trim()]);\n    }\n    \n    const orderItems = [];\n    const uncertainItems = [];\n    \n    for (const [quantityStr, itemText] of matches) {\n      // Parse quantity (handle both integer and decimal values)\n      let quantity;\n      try {\n        quantity = quantityStr.includes('.')\n          ? parseFloat(quantityStr)\n          : parseInt(quantityStr);\n      } catch (e) {\n        quantity = 0; // Default fallback\n      }\n      \n      // Extract unit information if present\n      const [itemName, unitInfo] = this.extractUnitAndItem(itemText);\n      \n      // Match against inventory using fuzzy matching\n      const [product, confidence] = this.fuzzyMatchProduct(itemName, matchThreshold);\n      \n      // Create the order item\n      const orderItem = {\n        quantity: quantity,\n        item: product.name || itemName,\n        confidence: confidence\n      };\n      \n      // Add product information if available\n      if (product.id) {\n        orderItem.product_id = product.id;\n        orderItem.brand = product.brand || '';\n        orderItem.category = product.category || '';\n        orderItem.rate = product.rate || 0;\n        \n        // Use product default unit if one is specified and no unit was found in text\n        if (!unitInfo && product.default_unit) {\n          unitInfo = {\n            unit: product.default_unit,\n            unit_type: \"package\" // Assume package for default units\n          };\n        }\n      }\n      \n      // Add unit information if available\n      if (unitInfo) {\n        orderItem.unit = unitInfo.unit;\n        orderItem.unit_type = unitInfo.unit_type;\n      }\n      \n      // Flag uncertain items\n      if (confidence < matchThreshold) {\n        orderItem.uncertain = true;\n        uncertainItems.push(orderItem);\n      } else {\n        orderItem.uncertain = false;\n      }\n      \n      // Add unique ID for the item\n      orderItem.id = Date.now() + orderItems.length;\n      \n      orderItems.push(orderItem);\n    }\n    \n    // Error handling - if no items were found\n    if (orderItems.length === 0) {\n      return [[], \"No items could be parsed from the input\"];\n    }\n    \n    // Error handling - if uncertain items were found\n    if (uncertainItems.length > 0) {\n      return [orderItems, `Found ${uncertainItems.length} item(s) with low confidence`];\n    }\n    \n    return [orderItems, null]; // No errors\n  }\n}\n\nconst Shop = () => {\n  const [upcomingOrders, setUpcomingOrders] = useState(dummyOrders);\n  const [paymentOrders, setPaymentOrders] = useState([]);\n  const [expandedCards, setExpandedCards] = useState({});\n  const [showReports, setShowReports] = useState(false);\n  const [completedOrders, setCompletedOrders] = useState([]);\n  const [showOrderModal, setShowOrderModal] = useState(false);\n  const [newOrder, setNewOrder] = useState({ customerName: '', orderId: '', items: [] });\n  const [sortMode, setSortMode] = useState(\"none\");\n  \n  // States for voice input\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [parsedItems, setParsedItems] = useState([]);\n  const [parsingError, setParsingError] = useState(null);\n  const recognitionRef = useRef(null);\n  const orderParserRef = useRef(null);\n\n  // Initialize order parser\n  useEffect(() => {\n    // Create the order parser once\n    if (!orderParserRef.current) {\n      orderParserRef.current = new OrderParser();\n    }\n  }, []);\n\n  // Generate a unique order ID\n  const generateOrderId = () => {\n    const timestamp = new Date().getTime();\n    const randomNum = Math.floor(Math.random() * 1000);\n    return `ORD${timestamp.toString().slice(-4)}${randomNum}`;\n  };\n\n  // Initialize recognition\n  useEffect(() => {\n    if (typeof window !== 'undefined' && 'webkitSpeechRecognition' in window) {\n      const SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\n      recognitionRef.current = new SpeechRecognition();\n      recognitionRef.current.continuous = true;\n      recognitionRef.current.interimResults = true;\n      \n      recognitionRef.current.onresult = (event) => {\n        let interimTranscript = '';\n        for (let i = event.resultIndex; i < event.results.length; i++) {\n          const transcript = event.results[i][0].transcript;\n          if (event.results[i].isFinal) {\n            setTranscript(prev => prev + ' ' + transcript);\n          } else {\n            interimTranscript += transcript;\n          }\n        }\n      };\n      \n      recognitionRef.current.onerror = (event) => {\n        console.error('Speech recognition error', event.error);\n        setIsListening(false);\n      };\n    }\n    \n    // Set default order ID when modal opens\n    if (showOrderModal) {\n      setNewOrder(prev => ({...prev, orderId: generateOrderId()}));\n    }\n    \n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n    };\n  }, [showOrderModal]);\n\n  const startListening = () => {\n    setTranscript('');\n    if (recognitionRef.current) {\n      recognitionRef.current.start();\n      setIsListening(true);\n    } else {\n      alert('Speech recognition is not supported in this browser.');\n    }\n  };\n\n  const stopListening = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    }\n  };\n\n  const parseOrderText = () => {\n    if (!transcript.trim()) {\n      alert(\"Please enter or speak your order first\");\n      return;\n    }\n    \n    // Use our OrderParser instead of the simple regex\n    const [items, error] = orderParserRef.current.parseOrder(transcript);\n    \n    if (items.length === 0) {\n      alert(error || \"No products detected in the order. Please try again.\");\n      setParsingError(error);\n    } else {\n      setParsedItems(items);\n      setParsingError(error); // This could be a warning like \"Found items with low confidence\"\n    }\n  };\n\n  const toggleExpand = (orderId) => {\n    setExpandedCards((prev) => ({ ...prev, [orderId]: !prev[orderId] }));\n  };\n\n  const moveToPayment = (orderId) => {\n    const order = upcomingOrders.find((o) => o.orderId === orderId);\n    setPaymentOrders((prev) => [...prev, order]);\n    setUpcomingOrders((prev) => prev.filter((o) => o.orderId !== orderId));\n  };\n\n  const deleteOrderCard = (orderId) => {\n    if (window.confirm(\"Are you sure to delete this order?\")) {\n      setUpcomingOrders((prev) => prev.filter((o) => o.orderId !== orderId));\n    }\n  };\n\n  const deleteItem = (orderId, itemId) => {\n    setUpcomingOrders((prev) =>\n      prev.map((o) =>\n        o.orderId === orderId\n          ? { ...o, items: o.items.filter((item) => item.id !== itemId) }\n          : o\n      )\n    );\n  };\n\n  const handlePayment = (orderId, mode) => {\n    const now = new Date();\n    const order = paymentOrders.find((o) => o.orderId === orderId);\n    const bill = {\n      ...order,\n      mode,\n      date: now.toLocaleDateString(),\n      time: now.toLocaleTimeString(),\n    };\n    console.log(\"Generated Bill:\", bill);\n    if (mode === \"credit\") {\n      alert(\"Credit bill generated. Redirect to borrower's page...\");\n    } else {\n      alert(\"Paid bill generated.\");\n    }\n    setPaymentOrders((prev) => prev.filter((o) => o.orderId !== orderId));\n    setCompletedOrders((prev) => [...prev, bill]);\n  };\n\n  const calculateTotal = (items) =>\n    items.reduce((acc, item) => acc + item.quantity * (item.rate || 0), 0);\n\n  const calculateRevenue = () => {\n    return completedOrders.reduce((total, order) => {\n      return total + calculateTotal(order.items);\n    }, 0);\n  };\n\n  const calculateProfit = () => {\n    return calculateRevenue() * 0.2;\n  };\n\n  const sortedUpcomingOrders = [...upcomingOrders].sort((a, b) => {\n    const totalA = calculateTotal(a.items);\n    const totalB = calculateTotal(b.items);\n    if (sortMode === \"asc\") return totalA - totalB;\n    if (sortMode === \"desc\") return totalB - totalA;\n    return 0;\n  });\n\n  const renderOrderCard = (order, isPayment = false) => (\n    <div key={order.orderId} className=\"min-w-[280px] max-w-xs bg-white rounded-lg shadow-md p-4 mx-2\">\n      <div className=\"flex justify-between items-center mb-2\">\n        <h2 className=\"text-md font-bold\">{order.customerName || \"Custom\"}</h2>\n        <Trash\n          className=\"w-4 h-4 text-red-500 cursor-pointer\"\n          onClick={() => deleteOrderCard(order.orderId)}\n        />\n      </div>\n      <div>\n        {(expandedCards[order.orderId] ? order.items : order.items.slice(0, 3)).map((item) => (\n          <div key={item.id} className=\"flex justify-between items-center text-sm border-b py-1\">\n            <div>\n              <p className=\"flex-1\">\n                {item.item} {item.brand && `(${item.brand})`}\n                {item.unit && <span className=\"text-xs text-gray-500 ml-1\">[{item.unit}]</span>}\n                {item.uncertain && <span className=\"text-xs text-red-500 ml-1\">⚠️</span>}\n              </p>\n              {!isPayment && (\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  value={item.quantity}\n                  onChange={(e) => {\n                    const quantity = parseInt(e.target.value);\n                    setUpcomingOrders((prev) =>\n                      prev.map((o) =>\n                        o.orderId === order.orderId\n                          ? {\n                              ...o,\n                              items: o.items.map((i) =>\n                                i.id === item.id ? { ...i, quantity } : i\n                              ),\n                            }\n                          : o\n                      )\n                    );\n                  }}\n                  className=\"w-12 border rounded px-1 text-xs\"\n                />\n              )}\n            </div>\n            {!isPayment && (\n              <Trash\n                className=\"w-3 h-3 text-red-400 cursor-pointer\"\n                onClick={() => deleteItem(order.orderId, item.id)}\n              />\n            )}\n          </div>\n        ))}\n        {order.items.length > 3 && (\n          <button\n            className=\"text-xs text-blue-500 mt-1\"\n            onClick={() => toggleExpand(order.orderId)}\n          >\n            {expandedCards[order.orderId] ? \"View Less\" : \"View More\"}\n          </button>\n        )}\n        <p className=\"mt-2 text-sm font-semibold\">Total: ₹{calculateTotal(order.items)}</p>\n        <p className=\"text-xs text-gray-500\">Order ID: {order.orderId}</p>\n        {!isPayment ? (\n          <Check\n            className=\"w-5 h-5 text-green-600 cursor-pointer mt-2\"\n            onClick={() => moveToPayment(order.orderId)}\n          />\n        ) : (\n          <div className=\"flex gap-2 mt-2\">\n            {[\"cash\", \"upi\", \"credit\"].map((mode) => (\n              <button\n                key={mode}\n                onClick={() => handlePayment(order.orderId, mode)}\n                className=\"text-xs px-2 py-1 bg-black text-white rounded-full\"\n              >\n                {mode.toUpperCase()}\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  const handleOrderInput = (field, value) => {\n    setNewOrder((prev) => ({ ...prev, [field]: value }));\n  };\n\n  const handleAddNewOrder = () => {\n    if (!newOrder.customerName) {\n      alert(\"Please enter customer name.\");\n      return;\n    }\n    \n    const items = parsedItems.length > 0 ? parsedItems : [\n      { id: Date.now(), item: \"Sample Product\", brand: \"Brand X\", quantity: 1, rate: 100 }\n    ];\n    \n    const orderWithItems = {\n      ...newOrder,\n      items: items\n    };\n    \n    setUpcomingOrders((prev) => [...prev, orderWithItems]);\n    setShowOrderModal(false);\n    setNewOrder({ customerName: '', orderId: '', items: [] });\n    setParsedItems([]);\n    setTranscript('');\n    setParsingError(null);\n  };\n\n  return (\n    <div className=\"p-6 space-y-8 bg-white min-h-screen\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-3xl font-bold\">Shop Dashboard</h1>\n        <button\n          onClick={() => setShowOrderModal(true)}\n          className=\"flex items-center bg-black text-white px-4 py-2 rounded-full hover:bg-gray-800\"\n        >\n          <PlusCircle className=\"mr-2 w-4 h-4\" /> Create Order\n        </button>\n      </div>\n\n      {showOrderModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex justify-center items-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-lg w-full max-w-md relative\">\n            <button\n              className=\"absolute top-2 right-2 text-gray-600 hover:text-black\"\n              onClick={() => setShowOrderModal(false)}\n            >\n              <X className=\"w-5 h-5\" />\n            </button>\n            <h2 className=\"text-lg font-semibold mb-4\">Take Order</h2>\n            <div className=\"space-y-4\">\n              <input\n                type=\"text\"\n                placeholder=\"Customer Name\"\n                className=\"w-full px-3 py-2 border rounded\"\n                value={newOrder.customerName}\n                onChange={(e) => handleOrderInput(\"customerName\", e.target.value)}\n              />\n              <div className=\"flex items-center\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Order ID (Auto-generated)\"\n                  className=\"w-full px-3 py-2 border rounded bg-gray-100\"\n                  value={newOrder.orderId}\n                  readOnly\n                />\n              </div>\n              \n              <div className=\"relative\">\n                <textarea\n                  placeholder=\"Enter order details or use voice input...\"\n                  className=\"w-full px-3 py-2 border rounded h-32\"\n                  value={transcript}\n                  onChange={(e) => setTranscript(e.target.value)}\n                ></textarea>\n                \n                <div className=\"flex justify-between mt-2\">\n                  {isListening ? (\n                    <button\n                      onClick={stopListening}\n                      className=\"flex items-center bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\"\n                    >\n                      <MicOff className=\"mr-1 w-4 h-4\" /> Stop Listening\n                    </button>\n                  ) : (\n                    <button\n                      onClick={startListening}\n                      className=\"flex items-center bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600\"\n                    >\n                      <Mic className=\"mr-1 w-4 h-4\" /> Start Listening\n                    </button>\n                  )}\n                  \n                  <button\n                    onClick={parseOrderText}\n                    className=\"bg-gray-200 text-gray-800 px-3 py-1 rounded hover:bg-gray-300\"\n                  >\n                    Parse Order\n                  </button>\n                </div>\n              </div>\n              \n              {parsedItems.length > 0 && (\n                <div className=\"border p-3 rounded bg-gray-50\">\n                  <h3 className=\"text-sm font-semibold mb-2\">Parsed Items:</h3>\n                  <ul className=\"text-sm\">\n                    {parsedItems.map((item, index) => (\n                      <li key={index} className=\"flex justify-between mb-1\">\n                        <span>{item.quantity}x {item.item} ({item.brand})</span>\n                        <span>₹{item.rate * item.quantity}</span>\n                      </li>\n                    ))}\n                  </ul>\n                  <div className=\"mt-2 text-right text-sm font-semibold\">\n                    Total: ₹{calculateTotal(parsedItems)}\n                  </div>\n                </div>\n              )}\n              \n              <button\n                onClick={handleAddNewOrder}\n                className=\"w-full bg-black text-white py-2 rounded hover:bg-gray-800\"\n              >\n                Add Order\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <section>\n        <h2 className=\"text-xl font-semibold mb-2\">Upcoming Orders</h2>\n        <div className=\"flex items-center gap-2 mb-2\">\n          <button\n            onClick={() => setSortMode(sortMode === \"asc\" ? \"desc\" : \"asc\")}\n            className=\"flex items-center bg-gray-200 px-3 py-1 text-sm rounded hover:bg-gray-300\"\n          >\n            Sort by Total {sortMode === \"asc\" ? <ArrowUp className=\"w-4 h-4 ml-1\" /> : <ArrowDown className=\"w-4 h-4 ml-1\" />}\n          </button>\n        </div>\n        <div className=\"flex overflow-x-auto pb-2\">\n          {upcomingOrders.length === 0 ? (\n            <p className=\"text-gray-500\">No upcoming orders.</p>\n          ) : (\n            <div className=\"flex\">\n              {sortedUpcomingOrders.map((order) => renderOrderCard(order))}\n            </div>\n          )}\n        </div>\n      </section>\n\n      <section>\n        <h2 className=\"text-xl font-semibold mb-2\">Payment Section</h2>\n        <div className=\"flex overflow-x-auto pb-2\">\n          {paymentOrders.length === 0 ? (\n            <p className=\"text-gray-500\">No orders in payment section.</p>\n          ) : (\n            <div className=\"flex\">\n              {paymentOrders.map((order) => renderOrderCard(order, true))}\n            </div>\n          )}\n        </div>\n      </section>\n\n      <section>\n        <button\n          onClick={() => setShowReports(!showReports)}\n          className=\"bg-black text-white px-4 py-2 rounded-full hover:bg-gray-800\"\n        >\n          <FileText className=\"inline-block mr-2\" /> Reports\n        </button>\n        {showReports && (\n          <div className=\"mt-4 border p-4 rounded-xl bg-gray-100\">\n            <h3 className=\"text-lg font-semibold mb-2\">Business Summary</h3>\n            <p>Total Revenue Today: ₹{calculateRevenue()}</p>\n            <p>Profit Today: ₹{calculateProfit()}</p>\n            <p>Monthly Revenue: ₹{calculateRevenue()}</p>\n            <p>Monthly Profit: ₹{calculateProfit()}</p>\n            <div className=\"mt-4\">\n              <h4 className=\"font-semibold mb-2\">Completed Orders</h4>\n              {completedOrders.length === 0 ? (\n                <p className=\"text-gray-500\">No completed orders.</p>\n              ) : (\n                <ul className=\"text-sm text-gray-700 space-y-2\">\n                  {completedOrders.map((order) => (\n                    <li key={order.orderId}>\n                      <strong>{order.customerName || \"Custom\"}</strong> - #{order.orderId} - ₹\n                      {calculateTotal(order.items)} - {order.mode.toUpperCase()} on {order.date} at {order.time}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default Shop;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,KAAK,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,UAAU,EAAEC,CAAC,EAAEC,GAAG,EAAEC,MAAM,QAAQ,cAAc;;AAErG;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAG,CACtB;EACEC,EAAE,EAAE,MAAM;EACVC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,SAAS;EAChBC,QAAQ,EAAE,YAAY;EACtBC,QAAQ,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC;EAC1CC,QAAQ,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE,SAAS,CAAC;EACvCC,YAAY,EAAE,MAAM;EACpBC,IAAI,EAAE;AACR,CAAC,EACD;EACEP,EAAE,EAAE,MAAM;EACVC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,SAAS;EAChBC,QAAQ,EAAE,YAAY;EACtBC,QAAQ,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC;EACjCC,QAAQ,EAAE,CAAC,WAAW,EAAE,GAAG,CAAC;EAC5BC,YAAY,EAAE,QAAQ;EACtBC,IAAI,EAAE;AACR,CAAC,EACD;EACEP,EAAE,EAAE,MAAM;EACVC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,SAAS;EAChBC,QAAQ,EAAE,YAAY;EACtBC,QAAQ,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC;EACjCC,QAAQ,EAAE,CAAC,WAAW,EAAE,GAAG,CAAC;EAC5BC,YAAY,EAAE,KAAK;EACnBC,IAAI,EAAE;AACR,CAAC,EACD;EACEP,EAAE,EAAE,MAAM;EACVC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,SAAS;EAChBC,QAAQ,EAAE,YAAY;EACtBC,QAAQ,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;EAChCC,QAAQ,EAAE,CAAC,WAAW,EAAE,GAAG,CAAC;EAC5BC,YAAY,EAAE,QAAQ;EACtBC,IAAI,EAAE;AACR,CAAC,EACD;EACEP,EAAE,EAAE,MAAM;EACVC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,SAAS;EAChBC,QAAQ,EAAE,YAAY;EACtBC,QAAQ,EAAE,CAAC,UAAU,CAAC;EACtBC,QAAQ,EAAE,CAAC,WAAW,EAAE,GAAG,CAAC;EAC5BC,YAAY,EAAE,MAAM;EACpBC,IAAI,EAAE;AACR,CAAC,EACD;EACEP,EAAE,EAAE,MAAM;EACVC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,SAAS;EAChBC,QAAQ,EAAE,YAAY;EACtBC,QAAQ,EAAE,CAAC,UAAU,CAAC;EACtBC,QAAQ,EAAE,CAAC,WAAW,EAAE,GAAG,CAAC;EAC5BC,YAAY,EAAE,QAAQ;EACtBC,IAAI,EAAE;AACR,CAAC,EACD;EACEP,EAAE,EAAE,MAAM;EACVC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,SAAS;EAChBC,QAAQ,EAAE,YAAY;EACtBC,QAAQ,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;EAC9BC,QAAQ,EAAE,CAAC,WAAW,EAAE,GAAG,CAAC;EAC5BC,YAAY,EAAE,KAAK;EACnBC,IAAI,EAAE;AACR,CAAC,EACD;EACEP,EAAE,EAAE,MAAM;EACVC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,SAAS;EAChBC,QAAQ,EAAE,YAAY;EACtBC,QAAQ,EAAE,CAAC,SAAS,CAAC;EACrBC,QAAQ,EAAE,CAAC,WAAW,EAAE,GAAG,CAAC;EAC5BC,YAAY,EAAE,QAAQ;EACtBC,IAAI,EAAE;AACR,CAAC,CACF;;AAED;AACA,MAAMC,WAAW,GAAG,CAClB;EACEC,YAAY,EAAE,UAAU;EACxBC,OAAO,EAAE,QAAQ;EACjBC,KAAK,EAAE,CACL;IAAEX,EAAE,EAAE,CAAC;IAAEY,IAAI,EAAE,WAAW;IAAEV,KAAK,EAAE,SAAS;IAAEW,QAAQ,EAAE,CAAC;IAAEN,IAAI,EAAE;EAAI,CAAC,EACtE;IAAEP,EAAE,EAAE,CAAC;IAAEY,IAAI,EAAE,WAAW;IAAEV,KAAK,EAAE,SAAS;IAAEW,QAAQ,EAAE,CAAC;IAAEN,IAAI,EAAE;EAAI,CAAC,EACtE;IAAEP,EAAE,EAAE,CAAC;IAAEY,IAAI,EAAE,WAAW;IAAEV,KAAK,EAAE,SAAS;IAAEW,QAAQ,EAAE,CAAC;IAAEN,IAAI,EAAE;EAAG,CAAC;AAEzE,CAAC,EACD;EACEE,YAAY,EAAE,UAAU;EACxBC,OAAO,EAAE,QAAQ;EACjBC,KAAK,EAAE,CACL;IAAEX,EAAE,EAAE,CAAC;IAAEY,IAAI,EAAE,WAAW;IAAEV,KAAK,EAAE,SAAS;IAAEW,QAAQ,EAAE,CAAC;IAAEN,IAAI,EAAE;EAAI,CAAC,EACtE;IAAEP,EAAE,EAAE,CAAC;IAAEY,IAAI,EAAE,WAAW;IAAEV,KAAK,EAAE,SAAS;IAAEW,QAAQ,EAAE,CAAC;IAAEN,IAAI,EAAE;EAAG,CAAC;AAEzE,CAAC,CACF;;AAED;AACA,MAAMO,WAAW,CAAC;EAChBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,SAAS,GAAGjB,eAAe;;IAEhC;IACA,IAAI,CAACkB,iBAAiB,GAAG,EAAE;IAC3B,IAAI,CAACC,wBAAwB,CAAC,CAAC;;IAE/B;IACA,IAAI,CAACC,KAAK,GAAG;MACX;MACA,IAAI,EAAE;QAACC,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC;MACtC,KAAK,EAAE;QAACD,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC;MACvC,MAAM,EAAE;QAACD,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC;MACxC,OAAO,EAAE;QAACD,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC;MACzC,UAAU,EAAE;QAACD,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC;MAC5C,WAAW,EAAE;QAACD,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC;MAC7C,GAAG,EAAE;QAACD,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAG,CAAC;MACpC,MAAM,EAAE;QAACD,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAG,CAAC;MACvC,OAAO,EAAE;QAACD,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAG,CAAC;MACxC;MACA,GAAG,EAAE;QAACD,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAG,CAAC;MACpC,OAAO,EAAE;QAACD,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAG,CAAC;MACxC,OAAO,EAAE;QAACD,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAG,CAAC;MACxC,QAAQ,EAAE;QAACD,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAG,CAAC;MACzC,QAAQ,EAAE;QAACD,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAG,CAAC;MACzC,IAAI,EAAE;QAACD,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC;MACtC,YAAY,EAAE;QAACD,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC;MAC9C,YAAY,EAAE;QAACD,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC;MAC9C;MACA,QAAQ,EAAE;QAACD,IAAI,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAQ,CAAC;MAC/C,SAAS,EAAE;QAACD,IAAI,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAQ,CAAC;MAChD,MAAM,EAAE;QAACD,IAAI,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAQ,CAAC;MAC7C,OAAO,EAAE;QAACD,IAAI,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAQ,CAAC;MAC9C,KAAK,EAAE;QAACD,IAAI,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAK,CAAC;MACzC,OAAO,EAAE;QAACD,IAAI,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAK,CAAC;MAC3C,QAAQ,EAAE;QAACD,IAAI,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAQ,CAAC;MAC/C,SAAS,EAAE;QAACD,IAAI,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAQ,CAAC;MAChD,MAAM,EAAE;QAACD,IAAI,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAM,CAAC;MAC3C,OAAO,EAAE;QAACD,IAAI,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAM;IAC7C,CAAC;EACH;EAEAH,wBAAwBA,CAAA,EAAG;IACzB;IACA,IAAI,CAACF,SAAS,CAACM,OAAO,CAACC,OAAO,IAAI;MAChC,MAAMlB,QAAQ,GAAG,IAAImB,GAAG,CAAC,CACvB,GAAGD,OAAO,CAAClB,QAAQ,EACnBkB,OAAO,CAACtB,IAAI,CAACwB,WAAW,CAAC,CAAC,EAC1BF,OAAO,CAACrB,KAAK,CAACuB,WAAW,CAAC,CAAC,CAC5B,CAAC;;MAEF;MACAF,OAAO,CAACnB,QAAQ,CAACkB,OAAO,CAACI,OAAO,IAAI;QAClCrB,QAAQ,CAACsB,GAAG,CAACD,OAAO,CAACD,WAAW,CAAC,CAAC,CAAC;QACnC;QACApB,QAAQ,CAACsB,GAAG,CAAC,GAAGJ,OAAO,CAACrB,KAAK,CAACuB,WAAW,CAAC,CAAC,IAAIC,OAAO,CAACD,WAAW,CAAC,CAAC,EAAE,CAAC;QACvEpB,QAAQ,CAACsB,GAAG,CAAC,GAAGJ,OAAO,CAACtB,IAAI,CAACwB,WAAW,CAAC,CAAC,IAAIC,OAAO,CAACD,WAAW,CAAC,CAAC,EAAE,CAAC;MACxE,CAAC,CAAC;MAEFpB,QAAQ,CAACiB,OAAO,CAACM,OAAO,IAAI;QAC1B,IAAIA,OAAO,IAAIA,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;UAAE;UACnC,IAAI,CAACZ,iBAAiB,CAACa,IAAI,CAAC;YAACF,OAAO;YAAEG,SAAS,EAAER,OAAO,CAACvB;UAAE,CAAC,CAAC;QAC/D;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;EAEA;EACAgC,iBAAiBA,CAACC,QAAQ,EAAEC,SAAS,GAAG,GAAG,EAAE;IAC3C,IAAI,CAAC,IAAI,CAAClB,SAAS,IAAI,IAAI,CAACA,SAAS,CAACa,MAAM,KAAK,CAAC,EAAE;MAClD,OAAO;QAAC5B,IAAI,EAAEgC;MAAQ,CAAC,EAAE,GAAG;IAC9B;IAEAA,QAAQ,GAAGA,QAAQ,CAACR,WAAW,CAAC,CAAC,CAACU,IAAI,CAAC,CAAC;;IAExC;IACA,KAAK,MAAM;MAACP,OAAO;MAAEG;IAAS,CAAC,IAAI,IAAI,CAACd,iBAAiB,EAAE;MACzD,IAAIW,OAAO,KAAKK,QAAQ,EAAE;QACxB,MAAMV,OAAO,GAAG,IAAI,CAACP,SAAS,CAACoB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACrC,EAAE,KAAK+B,SAAS,CAAC;QAC5D,OAAO,CAACR,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;MACzB,CAAC,MAAM,IAAIK,OAAO,CAACU,QAAQ,CAACL,QAAQ,CAAC,IAAIA,QAAQ,CAACK,QAAQ,CAACV,OAAO,CAAC,EAAE;QACnE,MAAML,OAAO,GAAG,IAAI,CAACP,SAAS,CAACoB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACrC,EAAE,KAAK+B,SAAS,CAAC;QAC5D,OAAO,CAACR,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;MACzB;IACF;;IAEA;IACA;IACA;IACA,IAAIgB,SAAS,GAAG,IAAI;IACpB,IAAIC,iBAAiB,GAAGN,SAAS;IAEjC,KAAK,MAAM;MAACN,OAAO;MAAEG;IAAS,CAAC,IAAI,IAAI,CAACd,iBAAiB,EAAE;MACzD,MAAMwB,UAAU,GAAG,IAAI,CAACC,mBAAmB,CAACd,OAAO,EAAEK,QAAQ,CAAC;MAC9D,IAAIQ,UAAU,GAAGD,iBAAiB,EAAE;QAClCA,iBAAiB,GAAGC,UAAU;QAC9BF,SAAS,GAAG;UAACX,OAAO;UAAEG;QAAS,CAAC;MAClC;IACF;IAEA,IAAIQ,SAAS,EAAE;MACb,MAAMhB,OAAO,GAAG,IAAI,CAACP,SAAS,CAACoB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACrC,EAAE,KAAKuC,SAAS,CAACR,SAAS,CAAC;MACtE,OAAO,CAACR,OAAO,EAAEiB,iBAAiB,CAAC;IACrC;;IAEA;IACA,OAAO,CAAC;MAACvC,IAAI,EAAEgC;IAAQ,CAAC,EAAE,GAAG,CAAC;EAChC;;EAEA;EACAS,mBAAmBA,CAACC,IAAI,EAAEC,IAAI,EAAE;IAC9B,IAAI,CAACD,IAAI,IAAI,CAACC,IAAI,EAAE,OAAO,CAAC;IAE5B,MAAMC,EAAE,GAAGF,IAAI,CAAClB,WAAW,CAAC,CAAC;IAC7B,MAAMqB,EAAE,GAAGF,IAAI,CAACnB,WAAW,CAAC,CAAC;;IAE7B;IACA,MAAMsB,QAAQ,GAAG,IAAI,CAACC,mBAAmB,CAACH,EAAE,EAAEC,EAAE,CAAC;IACjD,MAAMG,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACN,EAAE,CAAChB,MAAM,EAAEiB,EAAE,CAACjB,MAAM,CAAC;IAEhD,OAAO,CAAC,GAAIkB,QAAQ,GAAGE,SAAU;EACnC;;EAEA;EACAD,mBAAmBA,CAACH,EAAE,EAAEC,EAAE,EAAE;IAC1B,MAAMM,CAAC,GAAGP,EAAE,CAAChB,MAAM;IACnB,MAAMwB,CAAC,GAAGP,EAAE,CAACjB,MAAM;;IAEnB;IACA,MAAMyB,EAAE,GAAGC,KAAK,CAACH,CAAC,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,MAAMF,KAAK,CAACF,CAAC,GAAG,CAAC,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;IAE9D,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIN,CAAC,EAAEM,CAAC,EAAE,EAAEJ,EAAE,CAACI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC;IACzC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIN,CAAC,EAAEM,CAAC,EAAE,EAAEL,EAAE,CAAC,CAAC,CAAC,CAACK,CAAC,CAAC,GAAGA,CAAC;IAEzC,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIN,CAAC,EAAEM,CAAC,EAAE,EAAE;MAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIN,CAAC,EAAEM,CAAC,EAAE,EAAE;QAC3B,IAAId,EAAE,CAACa,CAAC,GAAC,CAAC,CAAC,KAAKZ,EAAE,CAACa,CAAC,GAAC,CAAC,CAAC,EAAE;UACvBL,EAAE,CAACI,CAAC,CAAC,CAACC,CAAC,CAAC,GAAGL,EAAE,CAACI,CAAC,GAAC,CAAC,CAAC,CAACC,CAAC,GAAC,CAAC,CAAC;QACzB,CAAC,MAAM;UACLL,EAAE,CAACI,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG,CAAC,GAAGT,IAAI,CAACU,GAAG,CACrBN,EAAE,CAACI,CAAC,GAAC,CAAC,CAAC,CAACC,CAAC,CAAC;UAAM;UAChBL,EAAE,CAACI,CAAC,CAAC,CAACC,CAAC,GAAC,CAAC,CAAC;UAAM;UAChBL,EAAE,CAACI,CAAC,GAAC,CAAC,CAAC,CAACC,CAAC,GAAC,CAAC,CAAC,CAAI;UAClB,CAAC;QACH;MACF;IACF;IAEA,OAAOL,EAAE,CAACF,CAAC,CAAC,CAACC,CAAC,CAAC;EACjB;EAEAQ,kBAAkBA,CAAC5B,QAAQ,EAAE;IAC3B,MAAM6B,KAAK,GAAG7B,QAAQ,CAAC8B,KAAK,CAAC,KAAK,CAAC;IACnC,IAAIC,QAAQ,GAAG,IAAI;;IAEnB;IACA,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGI,KAAK,CAACjC,MAAM,EAAE6B,CAAC,EAAE,EAAE;MACrC,MAAMO,IAAI,GAAGH,KAAK,CAACJ,CAAC,CAAC,CAACjC,WAAW,CAAC,CAAC;MACnC,IAAI,IAAI,CAACN,KAAK,CAAC8C,IAAI,CAAC,EAAE;QACpB,MAAMC,QAAQ,GAAG,IAAI,CAAC/C,KAAK,CAAC8C,IAAI,CAAC,CAAC7C,IAAI;QACtC,MAAM+C,YAAY,GAAG,IAAI,CAAChD,KAAK,CAAC8C,IAAI,CAAC,CAAC5C,QAAQ;;QAE9C;QACA,IAAIqC,CAAC,GAAG,CAAC,GAAGI,KAAK,CAACjC,MAAM,IAAIiC,KAAK,CAACJ,CAAC,GAAG,CAAC,CAAC,CAACjC,WAAW,CAAC,CAAC,KAAK,IAAI,EAAE;UAC/D,MAAM2C,cAAc,GAAGN,KAAK,CAACO,KAAK,CAACX,CAAC,GAAG,CAAC,CAAC,CAACY,IAAI,CAAC,GAAG,CAAC;UACnDN,QAAQ,GAAG;YACTO,IAAI,EAAEJ,YAAY;YAClBK,SAAS,EAAEN;UACb,CAAC;UACD,OAAO,CAACE,cAAc,EAAEJ,QAAQ,CAAC;QACnC;;QAEA;QACA,IAAIN,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG,CAAC,GAAGI,KAAK,CAACjC,MAAM,IAAI,CAAC4C,KAAK,CAACX,KAAK,CAACJ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;UACzD,MAAMU,cAAc,GAAG,CAAC,GAAGN,KAAK,CAACO,KAAK,CAAC,CAAC,EAAEX,CAAC,CAAC,EAAE,GAAGI,KAAK,CAACO,KAAK,CAACX,CAAC,GAAG,CAAC,CAAC,CAAC,CAACY,IAAI,CAAC,GAAG,CAAC;UAC9EN,QAAQ,GAAG;YACTO,IAAI,EAAEJ,YAAY;YAClBK,SAAS,EAAEN;UACb,CAAC;UACD,OAAO,CAACE,cAAc,EAAEJ,QAAQ,CAAC;QACnC;MACF;IACF;;IAEA;IACA,MAAMU,SAAS,GAAG,+BAA+B;IACjD,MAAMC,KAAK,GAAG1C,QAAQ,CAAC0C,KAAK,CAACD,SAAS,CAAC;IACvC,IAAIC,KAAK,EAAE;MACT,MAAMC,QAAQ,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACxC,IAAI,CAAC,CAAC;MAChC,MAAM0C,QAAQ,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACxC,IAAI,CAAC,CAAC;;MAEhC;MACA,MAAM2C,SAAS,GAAGF,QAAQ,CAACb,KAAK,CAAC,KAAK,CAAC;MACvC,KAAK,MAAMgB,QAAQ,IAAID,SAAS,EAAE;QAChC,IAAI,IAAI,CAAC3D,KAAK,CAAC4D,QAAQ,CAACtD,WAAW,CAAC,CAAC,CAAC,EAAE;UACtC,MAAM0C,YAAY,GAAG,IAAI,CAAChD,KAAK,CAAC4D,QAAQ,CAACtD,WAAW,CAAC,CAAC,CAAC,CAACJ,QAAQ;UAChE,MAAM6C,QAAQ,GAAG,IAAI,CAAC/C,KAAK,CAAC4D,QAAQ,CAACtD,WAAW,CAAC,CAAC,CAAC,CAAC+C,SAAS;UAC7DR,QAAQ,GAAG;YACTO,IAAI,EAAEJ,YAAY;YAClBK,SAAS,EAAEN;UACb,CAAC;UACD,OAAO,CAACW,QAAQ,EAAEb,QAAQ,CAAC;QAC7B;MACF;IACF;;IAEA;IACA,OAAO,CAAC/B,QAAQ,EAAE+B,QAAQ,CAAC;EAC7B;EAEAgB,UAAUA,CAACC,IAAI,EAAEC,cAAc,GAAG,GAAG,EAAE;IACrC;IACA,MAAMC,WAAW,GAAGF,IAAI,CAACxD,WAAW,CAAC,CAAC,CAACU,IAAI,CAAC,CAAC,CAC1CiD,OAAO,CAAC,4DAA4D,EAAE,EAAE,CAAC;;IAE5E;IACA;IACA,MAAMC,OAAO,GAAG,4DAA4D;IAE5E,IAAIV,KAAK;IACT,MAAMW,OAAO,GAAG,EAAE;IAClB,OAAO,CAACX,KAAK,GAAGU,OAAO,CAACE,IAAI,CAACJ,WAAW,CAAC,MAAM,IAAI,EAAE;MACnDG,OAAO,CAACxD,IAAI,CAAC,CAAC6C,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAACxC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3C;IAEA,MAAMqD,UAAU,GAAG,EAAE;IACrB,MAAMC,cAAc,GAAG,EAAE;IAEzB,KAAK,MAAM,CAACC,WAAW,EAAEzD,QAAQ,CAAC,IAAIqD,OAAO,EAAE;MAC7C;MACA,IAAIzE,QAAQ;MACZ,IAAI;QACFA,QAAQ,GAAG6E,WAAW,CAACpD,QAAQ,CAAC,GAAG,CAAC,GAChCqD,UAAU,CAACD,WAAW,CAAC,GACvBE,QAAQ,CAACF,WAAW,CAAC;MAC3B,CAAC,CAAC,OAAOG,CAAC,EAAE;QACVhF,QAAQ,GAAG,CAAC,CAAC,CAAC;MAChB;;MAEA;MACA,MAAM,CAACiF,QAAQ,EAAE9B,QAAQ,CAAC,GAAG,IAAI,CAACH,kBAAkB,CAAC5B,QAAQ,CAAC;;MAE9D;MACA,MAAM,CAACV,OAAO,EAAEwE,UAAU,CAAC,GAAG,IAAI,CAAC/D,iBAAiB,CAAC8D,QAAQ,EAAEZ,cAAc,CAAC;;MAE9E;MACA,MAAMc,SAAS,GAAG;QAChBnF,QAAQ,EAAEA,QAAQ;QAClBD,IAAI,EAAEW,OAAO,CAACtB,IAAI,IAAI6F,QAAQ;QAC9BC,UAAU,EAAEA;MACd,CAAC;;MAED;MACA,IAAIxE,OAAO,CAACvB,EAAE,EAAE;QACdgG,SAAS,CAACC,UAAU,GAAG1E,OAAO,CAACvB,EAAE;QACjCgG,SAAS,CAAC9F,KAAK,GAAGqB,OAAO,CAACrB,KAAK,IAAI,EAAE;QACrC8F,SAAS,CAAC7F,QAAQ,GAAGoB,OAAO,CAACpB,QAAQ,IAAI,EAAE;QAC3C6F,SAAS,CAACzF,IAAI,GAAGgB,OAAO,CAAChB,IAAI,IAAI,CAAC;;QAElC;QACA,IAAI,CAACyD,QAAQ,IAAIzC,OAAO,CAACjB,YAAY,EAAE;UACrC0D,QAAQ,GAAG;YACTO,IAAI,EAAEhD,OAAO,CAACjB,YAAY;YAC1BkE,SAAS,EAAE,SAAS,CAAC;UACvB,CAAC;QACH;MACF;;MAEA;MACA,IAAIR,QAAQ,EAAE;QACZgC,SAAS,CAACzB,IAAI,GAAGP,QAAQ,CAACO,IAAI;QAC9ByB,SAAS,CAACxB,SAAS,GAAGR,QAAQ,CAACQ,SAAS;MAC1C;;MAEA;MACA,IAAIuB,UAAU,GAAGb,cAAc,EAAE;QAC/Bc,SAAS,CAACE,SAAS,GAAG,IAAI;QAC1BT,cAAc,CAAC3D,IAAI,CAACkE,SAAS,CAAC;MAChC,CAAC,MAAM;QACLA,SAAS,CAACE,SAAS,GAAG,KAAK;MAC7B;;MAEA;MACAF,SAAS,CAAChG,EAAE,GAAGmG,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGZ,UAAU,CAAC3D,MAAM;MAE7C2D,UAAU,CAAC1D,IAAI,CAACkE,SAAS,CAAC;IAC5B;;IAEA;IACA,IAAIR,UAAU,CAAC3D,MAAM,KAAK,CAAC,EAAE;MAC3B,OAAO,CAAC,EAAE,EAAE,yCAAyC,CAAC;IACxD;;IAEA;IACA,IAAI4D,cAAc,CAAC5D,MAAM,GAAG,CAAC,EAAE;MAC7B,OAAO,CAAC2D,UAAU,EAAE,SAASC,cAAc,CAAC5D,MAAM,8BAA8B,CAAC;IACnF;IAEA,OAAO,CAAC2D,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;EAC7B;AACF;AAEA,MAAMa,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGvH,QAAQ,CAACuB,WAAW,CAAC;EACjE,MAAM,CAACiG,aAAa,EAAEC,gBAAgB,CAAC,GAAGzH,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC0H,aAAa,EAAEC,gBAAgB,CAAC,GAAG3H,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAAC4H,WAAW,EAAEC,cAAc,CAAC,GAAG7H,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC8H,eAAe,EAAEC,kBAAkB,CAAC,GAAG/H,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACgI,cAAc,EAAEC,iBAAiB,CAAC,GAAGjI,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACkI,QAAQ,EAAEC,WAAW,CAAC,GAAGnI,QAAQ,CAAC;IAAEwB,YAAY,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EACtF,MAAM,CAAC0G,QAAQ,EAAEC,WAAW,CAAC,GAAGrI,QAAQ,CAAC,MAAM,CAAC;;EAEhD;EACA,MAAM,CAACsI,UAAU,EAAEC,aAAa,CAAC,GAAGvI,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACwI,WAAW,EAAEC,cAAc,CAAC,GAAGzI,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC0I,WAAW,EAAEC,cAAc,CAAC,GAAG3I,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC4I,YAAY,EAAEC,eAAe,CAAC,GAAG7I,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM8I,cAAc,GAAG5I,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM6I,cAAc,GAAG7I,MAAM,CAAC,IAAI,CAAC;;EAEnC;EACAD,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAAC8I,cAAc,CAACC,OAAO,EAAE;MAC3BD,cAAc,CAACC,OAAO,GAAG,IAAInH,WAAW,CAAC,CAAC;IAC5C;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMoH,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,SAAS,GAAG,IAAIhC,IAAI,CAAC,CAAC,CAACiC,OAAO,CAAC,CAAC;IACtC,MAAMC,SAAS,GAAGnF,IAAI,CAACoF,KAAK,CAACpF,IAAI,CAACqF,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;IAClD,OAAO,MAAMJ,SAAS,CAACK,QAAQ,CAAC,CAAC,CAACnE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGgE,SAAS,EAAE;EAC3D,CAAC;;EAED;EACAnJ,SAAS,CAAC,MAAM;IACd,IAAI,OAAOuJ,MAAM,KAAK,WAAW,IAAI,yBAAyB,IAAIA,MAAM,EAAE;MACxE,MAAMC,iBAAiB,GAAGD,MAAM,CAACE,uBAAuB,IAAIF,MAAM,CAACC,iBAAiB;MACpFX,cAAc,CAACE,OAAO,GAAG,IAAIS,iBAAiB,CAAC,CAAC;MAChDX,cAAc,CAACE,OAAO,CAACW,UAAU,GAAG,IAAI;MACxCb,cAAc,CAACE,OAAO,CAACY,cAAc,GAAG,IAAI;MAE5Cd,cAAc,CAACE,OAAO,CAACa,QAAQ,GAAIC,KAAK,IAAK;QAC3C,IAAIC,iBAAiB,GAAG,EAAE;QAC1B,KAAK,IAAItF,CAAC,GAAGqF,KAAK,CAACE,WAAW,EAAEvF,CAAC,GAAGqF,KAAK,CAACG,OAAO,CAACrH,MAAM,EAAE6B,CAAC,EAAE,EAAE;UAC7D,MAAM6D,UAAU,GAAGwB,KAAK,CAACG,OAAO,CAACxF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC6D,UAAU;UACjD,IAAIwB,KAAK,CAACG,OAAO,CAACxF,CAAC,CAAC,CAACyF,OAAO,EAAE;YAC5B3B,aAAa,CAAC4B,IAAI,IAAIA,IAAI,GAAG,GAAG,GAAG7B,UAAU,CAAC;UAChD,CAAC,MAAM;YACLyB,iBAAiB,IAAIzB,UAAU;UACjC;QACF;MACF,CAAC;MAEDQ,cAAc,CAACE,OAAO,CAACoB,OAAO,GAAIN,KAAK,IAAK;QAC1CO,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAER,KAAK,CAACQ,KAAK,CAAC;QACtD7B,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;IACH;;IAEA;IACA,IAAIT,cAAc,EAAE;MAClBG,WAAW,CAACgC,IAAI,KAAK;QAAC,GAAGA,IAAI;QAAE1I,OAAO,EAAEwH,eAAe,CAAC;MAAC,CAAC,CAAC,CAAC;IAC9D;IAEA,OAAO,MAAM;MACX,IAAIH,cAAc,CAACE,OAAO,EAAE;QAC1BF,cAAc,CAACE,OAAO,CAACuB,IAAI,CAAC,CAAC;MAC/B;IACF,CAAC;EACH,CAAC,EAAE,CAACvC,cAAc,CAAC,CAAC;EAEpB,MAAMwC,cAAc,GAAGA,CAAA,KAAM;IAC3BjC,aAAa,CAAC,EAAE,CAAC;IACjB,IAAIO,cAAc,CAACE,OAAO,EAAE;MAC1BF,cAAc,CAACE,OAAO,CAACyB,KAAK,CAAC,CAAC;MAC9BhC,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,MAAM;MACLiC,KAAK,CAAC,sDAAsD,CAAC;IAC/D;EACF,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI7B,cAAc,CAACE,OAAO,EAAE;MAC1BF,cAAc,CAACE,OAAO,CAACuB,IAAI,CAAC,CAAC;MAC7B9B,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAMmC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACtC,UAAU,CAACpF,IAAI,CAAC,CAAC,EAAE;MACtBwH,KAAK,CAAC,wCAAwC,CAAC;MAC/C;IACF;;IAEA;IACA,MAAM,CAAChJ,KAAK,EAAE4I,KAAK,CAAC,GAAGvB,cAAc,CAACC,OAAO,CAACjD,UAAU,CAACuC,UAAU,CAAC;IAEpE,IAAI5G,KAAK,CAACkB,MAAM,KAAK,CAAC,EAAE;MACtB8H,KAAK,CAACJ,KAAK,IAAI,sDAAsD,CAAC;MACtEzB,eAAe,CAACyB,KAAK,CAAC;IACxB,CAAC,MAAM;MACL3B,cAAc,CAACjH,KAAK,CAAC;MACrBmH,eAAe,CAACyB,KAAK,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,MAAMO,YAAY,GAAIpJ,OAAO,IAAK;IAChCkG,gBAAgB,CAAEwC,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAAC1I,OAAO,GAAG,CAAC0I,IAAI,CAAC1I,OAAO;IAAE,CAAC,CAAC,CAAC;EACtE,CAAC;EAED,MAAMqJ,aAAa,GAAIrJ,OAAO,IAAK;IACjC,MAAMsJ,KAAK,GAAGzD,cAAc,CAACnE,IAAI,CAAE6H,CAAC,IAAKA,CAAC,CAACvJ,OAAO,KAAKA,OAAO,CAAC;IAC/DgG,gBAAgB,CAAE0C,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEY,KAAK,CAAC,CAAC;IAC5CxD,iBAAiB,CAAE4C,IAAI,IAAKA,IAAI,CAACc,MAAM,CAAED,CAAC,IAAKA,CAAC,CAACvJ,OAAO,KAAKA,OAAO,CAAC,CAAC;EACxE,CAAC;EAED,MAAMyJ,eAAe,GAAIzJ,OAAO,IAAK;IACnC,IAAI+H,MAAM,CAAC2B,OAAO,CAAC,oCAAoC,CAAC,EAAE;MACxD5D,iBAAiB,CAAE4C,IAAI,IAAKA,IAAI,CAACc,MAAM,CAAED,CAAC,IAAKA,CAAC,CAACvJ,OAAO,KAAKA,OAAO,CAAC,CAAC;IACxE;EACF,CAAC;EAED,MAAM2J,UAAU,GAAGA,CAAC3J,OAAO,EAAE4J,MAAM,KAAK;IACtC9D,iBAAiB,CAAE4C,IAAI,IACrBA,IAAI,CAAC3F,GAAG,CAAEwG,CAAC,IACTA,CAAC,CAACvJ,OAAO,KAAKA,OAAO,GACjB;MAAE,GAAGuJ,CAAC;MAAEtJ,KAAK,EAAEsJ,CAAC,CAACtJ,KAAK,CAACuJ,MAAM,CAAEtJ,IAAI,IAAKA,IAAI,CAACZ,EAAE,KAAKsK,MAAM;IAAE,CAAC,GAC7DL,CACN,CACF,CAAC;EACH,CAAC;EAED,MAAMM,aAAa,GAAGA,CAAC7J,OAAO,EAAE8J,IAAI,KAAK;IACvC,MAAMpE,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC;IACtB,MAAM6D,KAAK,GAAGvD,aAAa,CAACrE,IAAI,CAAE6H,CAAC,IAAKA,CAAC,CAACvJ,OAAO,KAAKA,OAAO,CAAC;IAC9D,MAAM+J,IAAI,GAAG;MACX,GAAGT,KAAK;MACRQ,IAAI;MACJE,IAAI,EAAEtE,GAAG,CAACuE,kBAAkB,CAAC,CAAC;MAC9BC,IAAI,EAAExE,GAAG,CAACyE,kBAAkB,CAAC;IAC/B,CAAC;IACDvB,OAAO,CAACwB,GAAG,CAAC,iBAAiB,EAAEL,IAAI,CAAC;IACpC,IAAID,IAAI,KAAK,QAAQ,EAAE;MACrBb,KAAK,CAAC,uDAAuD,CAAC;IAChE,CAAC,MAAM;MACLA,KAAK,CAAC,sBAAsB,CAAC;IAC/B;IACAjD,gBAAgB,CAAE0C,IAAI,IAAKA,IAAI,CAACc,MAAM,CAAED,CAAC,IAAKA,CAAC,CAACvJ,OAAO,KAAKA,OAAO,CAAC,CAAC;IACrEsG,kBAAkB,CAAEoC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEqB,IAAI,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMM,cAAc,GAAIpK,KAAK,IAC3BA,KAAK,CAACqK,MAAM,CAAC,CAACC,GAAG,EAAErK,IAAI,KAAKqK,GAAG,GAAGrK,IAAI,CAACC,QAAQ,IAAID,IAAI,CAACL,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EAExE,MAAM2K,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,OAAOnE,eAAe,CAACiE,MAAM,CAAC,CAACG,KAAK,EAAEnB,KAAK,KAAK;MAC9C,OAAOmB,KAAK,GAAGJ,cAAc,CAACf,KAAK,CAACrJ,KAAK,CAAC;IAC5C,CAAC,EAAE,CAAC,CAAC;EACP,CAAC;EAED,MAAMyK,eAAe,GAAGA,CAAA,KAAM;IAC5B,OAAOF,gBAAgB,CAAC,CAAC,GAAG,GAAG;EACjC,CAAC;EAED,MAAMG,oBAAoB,GAAG,CAAC,GAAG9E,cAAc,CAAC,CAAC+E,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAC9D,MAAMC,MAAM,GAAGV,cAAc,CAACQ,CAAC,CAAC5K,KAAK,CAAC;IACtC,MAAM+K,MAAM,GAAGX,cAAc,CAACS,CAAC,CAAC7K,KAAK,CAAC;IACtC,IAAI0G,QAAQ,KAAK,KAAK,EAAE,OAAOoE,MAAM,GAAGC,MAAM;IAC9C,IAAIrE,QAAQ,KAAK,MAAM,EAAE,OAAOqE,MAAM,GAAGD,MAAM;IAC/C,OAAO,CAAC;EACV,CAAC,CAAC;EAEF,MAAME,eAAe,GAAGA,CAAC3B,KAAK,EAAE4B,SAAS,GAAG,KAAK,kBAC/C9L,OAAA;IAAyB+L,SAAS,EAAC,+DAA+D;IAAAC,QAAA,gBAChGhM,OAAA;MAAK+L,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBACrDhM,OAAA;QAAI+L,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAE9B,KAAK,CAACvJ,YAAY,IAAI;MAAQ;QAAAsL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvEpM,OAAA,CAACV,KAAK;QACJyM,SAAS,EAAC,qCAAqC;QAC/CM,OAAO,EAAEA,CAAA,KAAMhC,eAAe,CAACH,KAAK,CAACtJ,OAAO;MAAE;QAAAqL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpM,OAAA;MAAAgM,QAAA,GACG,CAACnF,aAAa,CAACqD,KAAK,CAACtJ,OAAO,CAAC,GAAGsJ,KAAK,CAACrJ,KAAK,GAAGqJ,KAAK,CAACrJ,KAAK,CAAC0D,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEZ,GAAG,CAAE7C,IAAI,iBAC/Ed,OAAA;QAAmB+L,SAAS,EAAC,yDAAyD;QAAAC,QAAA,gBACpFhM,OAAA;UAAAgM,QAAA,gBACEhM,OAAA;YAAG+L,SAAS,EAAC,QAAQ;YAAAC,QAAA,GAClBlL,IAAI,CAACA,IAAI,EAAC,GAAC,EAACA,IAAI,CAACV,KAAK,IAAI,IAAIU,IAAI,CAACV,KAAK,GAAG,EAC3CU,IAAI,CAAC2D,IAAI,iBAAIzE,OAAA;cAAM+L,SAAS,EAAC,4BAA4B;cAAAC,QAAA,GAAC,GAAC,EAAClL,IAAI,CAAC2D,IAAI,EAAC,GAAC;YAAA;cAAAwH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAC9EtL,IAAI,CAACsF,SAAS,iBAAIpG,OAAA;cAAM+L,SAAS,EAAC,2BAA2B;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvE,CAAC,EACH,CAACN,SAAS,iBACT9L,OAAA;YACEsB,IAAI,EAAC,QAAQ;YACbwC,GAAG,EAAC,GAAG;YACPwI,KAAK,EAAExL,IAAI,CAACC,QAAS;YACrBwL,QAAQ,EAAGxG,CAAC,IAAK;cACf,MAAMhF,QAAQ,GAAG+E,QAAQ,CAACC,CAAC,CAACyG,MAAM,CAACF,KAAK,CAAC;cACzC5F,iBAAiB,CAAE4C,IAAI,IACrBA,IAAI,CAAC3F,GAAG,CAAEwG,CAAC,IACTA,CAAC,CAACvJ,OAAO,KAAKsJ,KAAK,CAACtJ,OAAO,GACvB;gBACE,GAAGuJ,CAAC;gBACJtJ,KAAK,EAAEsJ,CAAC,CAACtJ,KAAK,CAAC8C,GAAG,CAAEC,CAAC,IACnBA,CAAC,CAAC1D,EAAE,KAAKY,IAAI,CAACZ,EAAE,GAAG;kBAAE,GAAG0D,CAAC;kBAAE7C;gBAAS,CAAC,GAAG6C,CAC1C;cACF,CAAC,GACDuG,CACN,CACF,CAAC;YACH,CAAE;YACF4B,SAAS,EAAC;UAAkC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CACF;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EACL,CAACN,SAAS,iBACT9L,OAAA,CAACV,KAAK;UACJyM,SAAS,EAAC,qCAAqC;UAC/CM,OAAO,EAAEA,CAAA,KAAM9B,UAAU,CAACL,KAAK,CAACtJ,OAAO,EAAEE,IAAI,CAACZ,EAAE;QAAE;UAAA+L,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CACF;MAAA,GApCOtL,IAAI,CAACZ,EAAE;QAAA+L,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAqCZ,CACN,CAAC,EACDlC,KAAK,CAACrJ,KAAK,CAACkB,MAAM,GAAG,CAAC,iBACrB/B,OAAA;QACE+L,SAAS,EAAC,4BAA4B;QACtCM,OAAO,EAAEA,CAAA,KAAMrC,YAAY,CAACE,KAAK,CAACtJ,OAAO,CAAE;QAAAoL,QAAA,EAE1CnF,aAAa,CAACqD,KAAK,CAACtJ,OAAO,CAAC,GAAG,WAAW,GAAG;MAAW;QAAAqL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CACT,eACDpM,OAAA;QAAG+L,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GAAC,eAAQ,EAACf,cAAc,CAACf,KAAK,CAACrJ,KAAK,CAAC;MAAA;QAAAoL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnFpM,OAAA;QAAG+L,SAAS,EAAC,uBAAuB;QAAAC,QAAA,GAAC,YAAU,EAAC9B,KAAK,CAACtJ,OAAO;MAAA;QAAAqL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACjE,CAACN,SAAS,gBACT9L,OAAA,CAACT,KAAK;QACJwM,SAAS,EAAC,4CAA4C;QACtDM,OAAO,EAAEA,CAAA,KAAMpC,aAAa,CAACC,KAAK,CAACtJ,OAAO;MAAE;QAAAqL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,gBAEFpM,OAAA;QAAK+L,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC7B,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAACrI,GAAG,CAAE+G,IAAI,iBAClC1K,OAAA;UAEEqM,OAAO,EAAEA,CAAA,KAAM5B,aAAa,CAACP,KAAK,CAACtJ,OAAO,EAAE8J,IAAI,CAAE;UAClDqB,SAAS,EAAC,oDAAoD;UAAAC,QAAA,EAE7DtB,IAAI,CAAC+B,WAAW,CAAC;QAAC,GAJd/B,IAAI;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKH,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,GA7EElC,KAAK,CAACtJ,OAAO;IAAAqL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA8ElB,CACN;EAED,MAAMM,gBAAgB,GAAGA,CAACC,KAAK,EAAEL,KAAK,KAAK;IACzChF,WAAW,CAAEgC,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACqD,KAAK,GAAGL;IAAM,CAAC,CAAC,CAAC;EACtD,CAAC;EAED,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACvF,QAAQ,CAAC1G,YAAY,EAAE;MAC1BkJ,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACF;IAEA,MAAMhJ,KAAK,GAAGgH,WAAW,CAAC9F,MAAM,GAAG,CAAC,GAAG8F,WAAW,GAAG,CACnD;MAAE3H,EAAE,EAAEmG,IAAI,CAACC,GAAG,CAAC,CAAC;MAAExF,IAAI,EAAE,gBAAgB;MAAEV,KAAK,EAAE,SAAS;MAAEW,QAAQ,EAAE,CAAC;MAAEN,IAAI,EAAE;IAAI,CAAC,CACrF;IAED,MAAMoM,cAAc,GAAG;MACrB,GAAGxF,QAAQ;MACXxG,KAAK,EAAEA;IACT,CAAC;IAED6F,iBAAiB,CAAE4C,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEuD,cAAc,CAAC,CAAC;IACtDzF,iBAAiB,CAAC,KAAK,CAAC;IACxBE,WAAW,CAAC;MAAE3G,YAAY,EAAE,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC;IACzDiH,cAAc,CAAC,EAAE,CAAC;IAClBJ,aAAa,CAAC,EAAE,CAAC;IACjBM,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,oBACEhI,OAAA;IAAK+L,SAAS,EAAC,qCAAqC;IAAAC,QAAA,gBAClDhM,OAAA;MAAK+L,SAAS,EAAC,mCAAmC;MAAAC,QAAA,gBAChDhM,OAAA;QAAI+L,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtDpM,OAAA;QACEqM,OAAO,EAAEA,CAAA,KAAMjF,iBAAiB,CAAC,IAAI,CAAE;QACvC2E,SAAS,EAAC,gFAAgF;QAAAC,QAAA,gBAE1FhM,OAAA,CAACL,UAAU;UAACoM,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,iBACzC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELjF,cAAc,iBACbnH,OAAA;MAAK+L,SAAS,EAAC,6FAA6F;MAAAC,QAAA,eAC1GhM,OAAA;QAAK+L,SAAS,EAAC,4DAA4D;QAAAC,QAAA,gBACzEhM,OAAA;UACE+L,SAAS,EAAC,uDAAuD;UACjEM,OAAO,EAAEA,CAAA,KAAMjF,iBAAiB,CAAC,KAAK,CAAE;UAAA4E,QAAA,eAExChM,OAAA,CAACJ,CAAC;YAACmM,SAAS,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACTpM,OAAA;UAAI+L,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1DpM,OAAA;UAAK+L,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBhM,OAAA;YACEsB,IAAI,EAAC,MAAM;YACXwL,WAAW,EAAC,eAAe;YAC3Bf,SAAS,EAAC,iCAAiC;YAC3CO,KAAK,EAAEjF,QAAQ,CAAC1G,YAAa;YAC7B4L,QAAQ,EAAGxG,CAAC,IAAK2G,gBAAgB,CAAC,cAAc,EAAE3G,CAAC,CAACyG,MAAM,CAACF,KAAK;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnE,CAAC,eACFpM,OAAA;YAAK+L,SAAS,EAAC,mBAAmB;YAAAC,QAAA,eAChChM,OAAA;cACEsB,IAAI,EAAC,MAAM;cACXwL,WAAW,EAAC,2BAA2B;cACvCf,SAAS,EAAC,6CAA6C;cACvDO,KAAK,EAAEjF,QAAQ,CAACzG,OAAQ;cACxBmM,QAAQ;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENpM,OAAA;YAAK+L,SAAS,EAAC,UAAU;YAAAC,QAAA,gBACvBhM,OAAA;cACE8M,WAAW,EAAC,2CAA2C;cACvDf,SAAS,EAAC,sCAAsC;cAChDO,KAAK,EAAE7E,UAAW;cAClB8E,QAAQ,EAAGxG,CAAC,IAAK2B,aAAa,CAAC3B,CAAC,CAACyG,MAAM,CAACF,KAAK;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtC,CAAC,eAEZpM,OAAA;cAAK+L,SAAS,EAAC,2BAA2B;cAAAC,QAAA,GACvCrE,WAAW,gBACV3H,OAAA;gBACEqM,OAAO,EAAEvC,aAAc;gBACvBiC,SAAS,EAAC,4EAA4E;gBAAAC,QAAA,gBAEtFhM,OAAA,CAACF,MAAM;kBAACiM,SAAS,EAAC;gBAAc;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,mBACrC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,gBAETpM,OAAA;gBACEqM,OAAO,EAAE1C,cAAe;gBACxBoC,SAAS,EAAC,8EAA8E;gBAAAC,QAAA,gBAExFhM,OAAA,CAACH,GAAG;kBAACkM,SAAS,EAAC;gBAAc;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,oBAClC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CACT,eAEDpM,OAAA;gBACEqM,OAAO,EAAEtC,cAAe;gBACxBgC,SAAS,EAAC,+DAA+D;gBAAAC,QAAA,EAC1E;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAELvE,WAAW,CAAC9F,MAAM,GAAG,CAAC,iBACrB/B,OAAA;YAAK+L,SAAS,EAAC,+BAA+B;YAAAC,QAAA,gBAC5ChM,OAAA;cAAI+L,SAAS,EAAC,4BAA4B;cAAAC,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7DpM,OAAA;cAAI+L,SAAS,EAAC,SAAS;cAAAC,QAAA,EACpBnE,WAAW,CAAClE,GAAG,CAAC,CAAC7C,IAAI,EAAEkM,KAAK,kBAC3BhN,OAAA;gBAAgB+L,SAAS,EAAC,2BAA2B;gBAAAC,QAAA,gBACnDhM,OAAA;kBAAAgM,QAAA,GAAOlL,IAAI,CAACC,QAAQ,EAAC,IAAE,EAACD,IAAI,CAACA,IAAI,EAAC,IAAE,EAACA,IAAI,CAACV,KAAK,EAAC,GAAC;gBAAA;kBAAA6L,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACxDpM,OAAA;kBAAAgM,QAAA,GAAM,QAAC,EAAClL,IAAI,CAACL,IAAI,GAAGK,IAAI,CAACC,QAAQ;gBAAA;kBAAAkL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA,GAFlCY,KAAK;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAGV,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACLpM,OAAA;cAAK+L,SAAS,EAAC,uCAAuC;cAAAC,QAAA,GAAC,eAC7C,EAACf,cAAc,CAACpD,WAAW,CAAC;YAAA;cAAAoE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,eAEDpM,OAAA;YACEqM,OAAO,EAAEO,iBAAkB;YAC3Bb,SAAS,EAAC,2DAA2D;YAAAC,QAAA,EACtE;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAEDpM,OAAA;MAAAgM,QAAA,gBACEhM,OAAA;QAAI+L,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/DpM,OAAA;QAAK+L,SAAS,EAAC,8BAA8B;QAAAC,QAAA,eAC3ChM,OAAA;UACEqM,OAAO,EAAEA,CAAA,KAAM7E,WAAW,CAACD,QAAQ,KAAK,KAAK,GAAG,MAAM,GAAG,KAAK,CAAE;UAChEwE,SAAS,EAAC,2EAA2E;UAAAC,QAAA,GACtF,gBACe,EAACzE,QAAQ,KAAK,KAAK,gBAAGvH,OAAA,CAACN,OAAO;YAACqM,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGpM,OAAA,CAACP,SAAS;YAACsM,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3G;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNpM,OAAA;QAAK+L,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EACvCvF,cAAc,CAAC1E,MAAM,KAAK,CAAC,gBAC1B/B,OAAA;UAAG+L,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAEpDpM,OAAA;UAAK+L,SAAS,EAAC,MAAM;UAAAC,QAAA,EAClBT,oBAAoB,CAAC5H,GAAG,CAAEuG,KAAK,IAAK2B,eAAe,CAAC3B,KAAK,CAAC;QAAC;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEVpM,OAAA;MAAAgM,QAAA,gBACEhM,OAAA;QAAI+L,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/DpM,OAAA;QAAK+L,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EACvCrF,aAAa,CAAC5E,MAAM,KAAK,CAAC,gBACzB/B,OAAA;UAAG+L,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAA6B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAE9DpM,OAAA;UAAK+L,SAAS,EAAC,MAAM;UAAAC,QAAA,EAClBrF,aAAa,CAAChD,GAAG,CAAEuG,KAAK,IAAK2B,eAAe,CAAC3B,KAAK,EAAE,IAAI,CAAC;QAAC;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEVpM,OAAA;MAAAgM,QAAA,gBACEhM,OAAA;QACEqM,OAAO,EAAEA,CAAA,KAAMrF,cAAc,CAAC,CAACD,WAAW,CAAE;QAC5CgF,SAAS,EAAC,8DAA8D;QAAAC,QAAA,gBAExEhM,OAAA,CAACR,QAAQ;UAACuM,SAAS,EAAC;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,YAC5C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRrF,WAAW,iBACV/G,OAAA;QAAK+L,SAAS,EAAC,wCAAwC;QAAAC,QAAA,gBACrDhM,OAAA;UAAI+L,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChEpM,OAAA;UAAAgM,QAAA,GAAG,6BAAsB,EAACZ,gBAAgB,CAAC,CAAC;QAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjDpM,OAAA;UAAAgM,QAAA,GAAG,sBAAe,EAACV,eAAe,CAAC,CAAC;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzCpM,OAAA;UAAAgM,QAAA,GAAG,yBAAkB,EAACZ,gBAAgB,CAAC,CAAC;QAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7CpM,OAAA;UAAAgM,QAAA,GAAG,wBAAiB,EAACV,eAAe,CAAC,CAAC;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3CpM,OAAA;UAAK+L,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBhM,OAAA;YAAI+L,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACvDnF,eAAe,CAAClF,MAAM,KAAK,CAAC,gBAC3B/B,OAAA;YAAG+L,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,gBAErDpM,OAAA;YAAI+L,SAAS,EAAC,iCAAiC;YAAAC,QAAA,EAC5C/E,eAAe,CAACtD,GAAG,CAAEuG,KAAK,iBACzBlK,OAAA;cAAAgM,QAAA,gBACEhM,OAAA;gBAAAgM,QAAA,EAAS9B,KAAK,CAACvJ,YAAY,IAAI;cAAQ;gBAAAsL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,QAAI,EAAClC,KAAK,CAACtJ,OAAO,EAAC,WACpE,EAACqK,cAAc,CAACf,KAAK,CAACrJ,KAAK,CAAC,EAAC,KAAG,EAACqJ,KAAK,CAACQ,IAAI,CAAC+B,WAAW,CAAC,CAAC,EAAC,MAAI,EAACvC,KAAK,CAACU,IAAI,EAAC,MAAI,EAACV,KAAK,CAACY,IAAI;YAAA,GAFlFZ,KAAK,CAACtJ,OAAO;cAAAqL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGlB,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CACL;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAC5F,EAAA,CAncID,IAAI;AAAA0G,EAAA,GAAJ1G,IAAI;AAqcV,eAAeA,IAAI;AAAC,IAAA0G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}